&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;初学lufylegend.js之日，我用lufylegend.js开发了第一个HTML5小游戏——拼图游戏，还写了篇博文来炫耀一下：&lt;a href=&quot;http://blog.csdn.net/yorhomwang/article/details/8546053&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;HTML5小游戏《智力大拼图》发布，挑战你的思维风暴&lt;/a&gt;。不过当时初学游戏开发，经验浅薄，所以没有好好专研游戏里的算法和代码的缺陷，导致游戏出现了很多bug，甚至拼图打乱后很可能无法复原。最近经常有朋友问起这个游戏，希望我能把代码里的bug改一下方便初学者学习，顺便我也打算测试一下自己写这种小游戏的速度，所以就抽出了一些时间将这个游戏从头到尾重新写了一遍，计算了一下用时，从准备、修改素材到最后完成游戏，一共用了大约2h的时间。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;以下是游戏地址：&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;a href=&quot;http://yuehaowang.github.io/games/puzzle/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;http://yuehaowang.github.io/games/puzzle/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这是我的游戏记录，欢迎各位挑战：&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;&quot; src=&quot;/ueditor/php/upload/image/20160930/1475205608215270.jpg&quot; alt=&quot;我的纪录&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;接下来就来讲讲如何开发完成这款游戏的。（按“编年体”）&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;a style=&quot;color: rgb(0, 136, 219); cursor: pointer;&quot;&gt;&lt;/a&gt;准备阶段&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;准备lufylegend游戏引擎，大家可以去官方网站下载：&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/yorhomwang/article/details/lufylegend.com/lufylegend&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;lufylegend.com/lufylegend&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;引擎文档地址：&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/yorhomwang/article/details/lufylegend.com/lufylegend/api&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;lufylegend.com/lufylegend/api&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;可以说，如果没有强大的lufylegend引擎，这种html5小游戏用原生canvas制作，少说要一天呢。&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;a style=&quot;color: rgb(0, 136, 219); cursor: pointer;&quot;&gt;&lt;/a&gt;0～30min&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;准备素材（10min） + 修改素材（20min）。由于在下实在手残，不善于P图，修改图片用了大约20min，囧……&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;a style=&quot;color: rgb(0, 136, 219); cursor: pointer;&quot;&gt;&lt;/a&gt;30～50min&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;开发开始界面。游戏不能没有开始界面所以我们首先实现这部分代码。在此之前是&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;index.html&lt;/code&gt;里的代码，代码如下：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs xml&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Puzzle&amp;lt;/title&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&amp;quot;viewport&amp;quot;&amp;nbsp;content=&amp;quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;type=&amp;quot;text/javascript&amp;quot;&amp;nbsp;src=&amp;quot;./lib/lufylegend-1.10.1.simple.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;type=&amp;quot;text/javascript&amp;quot;&amp;nbsp;src=&amp;quot;./js/Main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;nbsp;style=&amp;quot;margin:&amp;nbsp;0px;&amp;nbsp;font-size:&amp;nbsp;0px;&amp;nbsp;background:&amp;nbsp;#F2F2F2;&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&amp;quot;mygame&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;主要是引入一些js文件，不多说。然后准备一个Main.js文件，在这个文件里添加初始化界面和加载资源的代码：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;/**&amp;nbsp;初始化游戏&amp;nbsp;*/LInit(60,&amp;nbsp;&amp;quot;mygame&amp;quot;,&amp;nbsp;390,&amp;nbsp;580,&amp;nbsp;main);var&amp;nbsp;imgBmpd;/**&amp;nbsp;游戏层&amp;nbsp;*/var&amp;nbsp;stageLayer,&amp;nbsp;gameLayer,&amp;nbsp;overLayer;/**&amp;nbsp;拼图块列表&amp;nbsp;*/var&amp;nbsp;blockList;/**&amp;nbsp;是否游戏结束&amp;nbsp;*/var&amp;nbsp;isGameOver;/**&amp;nbsp;用时&amp;nbsp;*/var&amp;nbsp;startTime,&amp;nbsp;time,&amp;nbsp;timeTxt;/**&amp;nbsp;步数&amp;nbsp;*/var&amp;nbsp;steps,&amp;nbsp;stepsTxt;function&amp;nbsp;main&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;全屏设置&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(LGlobal.mobile)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LGlobal.stageScale&amp;nbsp;=&amp;nbsp;LStageScaleMode.SHOW_ALL;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LGlobal.screen(LGlobal.FULL_SCREEN);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;添加加载提示&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;loadingHint&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadingHint.text&amp;nbsp;=&amp;nbsp;&amp;quot;资源加载中……&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadingHint.size&amp;nbsp;=&amp;nbsp;20;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadingHint.x&amp;nbsp;=&amp;nbsp;(LGlobal.width&amp;nbsp;-&amp;nbsp;loadingHint.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadingHint.y&amp;nbsp;=&amp;nbsp;(LGlobal.height&amp;nbsp;-&amp;nbsp;loadingHint.getHeight())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addChild(loadingHint);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;加载图片&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LLoadManage.load(
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{path&amp;nbsp;:&amp;nbsp;&amp;quot;./js/Block.js&amp;quot;},
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{name&amp;nbsp;:&amp;nbsp;&amp;quot;img&amp;quot;,&amp;nbsp;path&amp;nbsp;:&amp;nbsp;&amp;quot;./images/img.jpg&amp;quot;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;null,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;(result)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;移除加载提示&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadingHint.remove();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;保存位图数据，方便后续使用&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;imgBmpd&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LBitmapData(result[&amp;quot;img&amp;quot;]);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gameInit();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);
}function&amp;nbsp;gameInit&amp;nbsp;(e)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;初始化舞台层&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LSprite();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.graphics.drawRect(0,&amp;nbsp;&amp;quot;&amp;quot;,&amp;nbsp;[0,&amp;nbsp;0,&amp;nbsp;LGlobal.width,&amp;nbsp;LGlobal.height],&amp;nbsp;true,&amp;nbsp;&amp;quot;#EFEFEF&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addChild(stageLayer);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;初始化游戏层&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gameLayer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LSprite();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.addChild(gameLayer);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;初始化最上层&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overLayer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LSprite();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.addChild(overLayer);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;添加开始界面&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addBeginningUI();
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;以上代码有详细注释，大家可以对照引擎文档和注释进行阅读。有些全局变量会在以后的代码中使用，大家可以先忽略。接下来是&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;addBeginningUI&lt;/code&gt;函数里的代码，用于实现开始界面：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;addBeginningUI&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;beginningLayer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LSprite();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;beginningLayer.graphics.drawRect(0,&amp;nbsp;&amp;quot;&amp;quot;,&amp;nbsp;[0,&amp;nbsp;0,&amp;nbsp;LGlobal.width,&amp;nbsp;LGlobal.height],&amp;nbsp;true,&amp;nbsp;&amp;quot;#EDEDED&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.addChild(beginningLayer);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;游戏标题&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;title&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.text&amp;nbsp;=&amp;nbsp;&amp;quot;拼图游戏&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.size&amp;nbsp;=&amp;nbsp;50;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.weight&amp;nbsp;=&amp;nbsp;&amp;quot;bold&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.x&amp;nbsp;=&amp;nbsp;(LGlobal.width&amp;nbsp;-&amp;nbsp;title.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.y&amp;nbsp;=&amp;nbsp;160;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.lineWidth&amp;nbsp;=&amp;nbsp;5;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#000000&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;beginningLayer.addChild(title);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;开始游戏提示&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;hint&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hint.text&amp;nbsp;=&amp;nbsp;&amp;quot;-&amp;nbsp;点击屏幕开始游戏&amp;nbsp;-&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hint.size&amp;nbsp;=&amp;nbsp;25;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hint.x&amp;nbsp;=&amp;nbsp;(LGlobal.width&amp;nbsp;-&amp;nbsp;hint.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hint.y&amp;nbsp;=&amp;nbsp;370;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;beginningLayer.addChild(hint);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;开始游戏&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;beginningLayer.addEventListener(LMouseEvent.MOUSE_UP,&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;beginningLayer.remove();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;startGame();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;到此，运行代码，得到我们的开始界面：&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;&quot; src=&quot;/ueditor/php/upload/image/20160930/1475205609622924.jpg&quot; alt=&quot;开始界面&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;看到这个画面，其实我自己都想吐槽一下实在是太“朴素”了，囧……&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;不过我这次图个制作速度，所以还望各位看官海量。&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;a style=&quot;color: rgb(0, 136, 219); cursor: pointer;&quot;&gt;&lt;/a&gt;50～90min&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这40分钟的时间，是最关键时期，期间我们要完成整个游戏的主体部分。首先，我们需要用代码来实现以下过程：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs diff&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;初始化游戏界面数据（如游戏时间、所用步数）和显示一些UI部件（如图样）
|-&amp;gt;&amp;nbsp;获取随机的拼图块位置|-&amp;gt;&amp;nbsp;显示打乱后的拼图块&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;我们将这些步骤做成一个个的函数方便我们统一调用：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs javascript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;startGame&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isGameOver&amp;nbsp;=&amp;nbsp;false;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;初始化时间和步数&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;startTime&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;Date()).getTime();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;time&amp;nbsp;=&amp;nbsp;0;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;steps&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;初始化拼图块列表&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;initBlockList();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;打乱拼图&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getRandomBlockList();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;显示拼图&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;showBlock();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;显示缩略图&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;showThumbnail();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;显示时间&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addTimeTxt();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;显示步数&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addStepsTxt();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.addEventListener(LEvent.ENTER_FRAME,&amp;nbsp;onFrame);
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;函数一开始，我们把&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;isGameOver&lt;/code&gt;变量设定为&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;false&lt;/code&gt;代表游戏未结束，在后期的代码里，我们会看到这个变量的作用。接着我们初始化了用于表示时间和步数的&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;time&lt;/code&gt;和&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;steps&lt;/code&gt;这两个全局变量，另外初始化变量&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;startTime&lt;/code&gt;的值用于后面计算游戏时间。&lt;br/&gt;接下来，我们就要开始初始化拼图块了。见&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;initBlockList&lt;/code&gt;里的代码：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;initBlockList&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;blockList&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Array();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;9;&amp;nbsp;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;根据序号计算拼图块图片显示位置&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;y&amp;nbsp;=&amp;nbsp;(i&amp;nbsp;/&amp;nbsp;3)&amp;nbsp;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;0,&amp;nbsp;x&amp;nbsp;=&amp;nbsp;i&amp;nbsp;%&amp;nbsp;3;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;blockList.push(new&amp;nbsp;Block(i,&amp;nbsp;x,&amp;nbsp;y));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这里我们使用了一个&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block&lt;/code&gt;类，这个类用于显示拼图块和储存拼图块的数据，并提供了一些方法来操控拼图块，下面是其构造器的代码：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs javascript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;Block&amp;nbsp;(index,&amp;nbsp;x,&amp;nbsp;y)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LExtends(this,&amp;nbsp;LSprite,&amp;nbsp;[]);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;bmpd&amp;nbsp;=&amp;nbsp;imgBmpd.clone();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bmpd.setProperties(x&amp;nbsp;*&amp;nbsp;130,&amp;nbsp;y&amp;nbsp;*&amp;nbsp;130,&amp;nbsp;130,&amp;nbsp;130);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.bmp&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LBitmap(bmpd);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.addChild(this.bmp);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;border&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LShape();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border.graphics.drawRect(3,&amp;nbsp;&amp;quot;#CCCCCC&amp;quot;,&amp;nbsp;[0,&amp;nbsp;0,&amp;nbsp;130,&amp;nbsp;130]);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.addChild(border);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.index&amp;nbsp;=&amp;nbsp;index;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.addEventListener(LMouseEvent.MOUSE_UP,&amp;nbsp;this.onClick);
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block&lt;/code&gt;类继承自&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;LSprite&lt;/code&gt;，属于一个显示对象，所以我们在这个类中添加了一个位图对象用于显示拼图块对应的图片。除此之外，我们还为拼图块添加了一个边框，在显示时用于隔开周围的拼图块。&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block&lt;/code&gt;类有一个&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;index&lt;/code&gt;属性，代表拼图块在拼图块列表&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;blockList&lt;/code&gt;中的正确位置。最后，我们为此类添加了一个鼠标按下事件，用于处理鼠标按下后移动图块操作。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;接下来我们还要介绍这个类的一个方法&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;setLocation&lt;/code&gt;：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs javascript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;Block.prototype.setLocation&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(x,&amp;nbsp;y)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.locationX&amp;nbsp;=&amp;nbsp;x;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.locationY&amp;nbsp;=&amp;nbsp;y;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.x&amp;nbsp;=&amp;nbsp;x&amp;nbsp;*&amp;nbsp;130;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.y&amp;nbsp;=&amp;nbsp;y&amp;nbsp;*&amp;nbsp;130;
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这个方法用于设置拼图块对象的显示位置以及保存拼图块的“数组位置”。什么是“数组位置”呢？各位看官可以通过下面的图片加以了解：&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;&quot; src=&quot;/ueditor/php/upload/image/20160930/1475205610770324.jpg&quot; alt=&quot;图解“数组位置”&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;可以看到，“数组位置”就类似于二维数组中的元素下标。储存这个位置的作用在于可以很方便地从&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;blockList&lt;/code&gt;中获取到附近的其他拼图块。这个方法在我们显示拼图时有调用到，在显示拼图之前，我们得先打乱拼图，见如下代码：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs javascript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;getRandomBlockList&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;随机打乱拼图&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;blockList.sort(function&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;0.5&amp;nbsp;-&amp;nbsp;Math.random();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;计算逆序和&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;reverseAmount&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;l&amp;nbsp;=&amp;nbsp;blockList.length,&amp;nbsp;preBlock&amp;nbsp;=&amp;nbsp;null;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;l;&amp;nbsp;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!preBlock)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;preBlock&amp;nbsp;=&amp;nbsp;blockList[0];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;continue;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;currentBlock&amp;nbsp;=&amp;nbsp;blockList[i];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(currentBlock.index&amp;nbsp;&amp;lt;&amp;nbsp;preBlock.index)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reverseAmount++;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;preBlock&amp;nbsp;=&amp;nbsp;currentBlock;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;检测打乱后是否可还原&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(reverseAmount&amp;nbsp;%&amp;nbsp;2&amp;nbsp;!=&amp;nbsp;0)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;不合格，重新打乱&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getRandomBlockList();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;打乱拼图部分直接用数组的&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;sort&lt;/code&gt;方法进行随机打乱：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs javascript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;blockList.sort(function&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;0.5&amp;nbsp;-&amp;nbsp;Math.random();
});&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;其实打乱算法有很多种，我这里采用最粗暴的方法，也就是随机打乱。这种算法简单是简单，坏在可能出现无法复原的现象。针对这个问题，就有配套的检测打乱后是否可还原的算法，具体的算法理论我摘用&lt;a href=&quot;http://blog.csdn.net/lufy_legend&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;lufy大神&lt;/a&gt;的评论：&lt;/p&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;此类游戏能否还原关键是看它打乱后的逆序次数之和是否为偶数&lt;br/&gt;假设你打乱后的数组中的每一个小图块为&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;obj0&lt;/code&gt;，&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;obj1&lt;/code&gt;，&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;obj2&lt;/code&gt;，…它们打乱之前的序号分别为&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;obj0.num&lt;/code&gt;，&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;obj1.num&lt;/code&gt;…&lt;br/&gt;接下来循环数组，&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;如果前者的序号比后者大，如&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;obj0.num &amp;gt; obj1.num&lt;/code&gt;，这表示一个逆序&lt;/strong&gt;&lt;br/&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;当全部的逆序之和为奇数时表示不可还原&lt;/strong&gt;，重新打乱即可，打乱后重新检测，直到逆序之和为偶数为止&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;上面我给出的&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;getRandomBlockList&lt;/code&gt;里的代码就是在实现打乱算法和检测是否可还原算法。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;还有一种打乱方式，大家可以尝试尝试：和复原拼图一样，将空白块一步一步地与周围的拼图随机交换顺序。这个打乱算法较上一种而言，不会出现无法复原的现象，而且可以根据打乱的步数设定游戏难度。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在完成打乱拼图块后，如期而至的是显示拼图块：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;showBlock()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;l&amp;nbsp;=&amp;nbsp;blockList.length;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;l;&amp;nbsp;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;b&amp;nbsp;=&amp;nbsp;blockList[i];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;根据序号计算拼图块位置&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;y&amp;nbsp;=&amp;nbsp;(i&amp;nbsp;/&amp;nbsp;3)&amp;nbsp;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;0,&amp;nbsp;x&amp;nbsp;=&amp;nbsp;i&amp;nbsp;%&amp;nbsp;3;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b.setLocation(x,&amp;nbsp;y);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gameLayer.addChild(b);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;显示了拼图块后，我们要做的就是添加操作拼图块的功能。于是需要拓展&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block&lt;/code&gt;类，为其添加事件监听器&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;onClick&lt;/code&gt;方法：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;Block.prototype.onClick&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(e)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;self&amp;nbsp;=&amp;nbsp;e.currentTarget;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(isGameOver)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;checkList&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Array();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;判断右侧是否有方块&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(self.locationX&amp;nbsp;&amp;gt;&amp;nbsp;0)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkList.push(Block.getBlock(self.locationX&amp;nbsp;-&amp;nbsp;1,&amp;nbsp;self.locationY));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;判断左侧是否有方块&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(self.locationX&amp;nbsp;&amp;lt;&amp;nbsp;2)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkList.push(Block.getBlock(self.locationX&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;self.locationY));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;判断上方是否有方块&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(self.locationY&amp;nbsp;&amp;gt;&amp;nbsp;0)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkList.push(Block.getBlock(self.locationX,&amp;nbsp;self.locationY&amp;nbsp;-&amp;nbsp;1));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;判断下方是否有方块&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(self.locationY&amp;nbsp;&amp;lt;&amp;nbsp;2)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkList.push(Block.getBlock(self.locationX,&amp;nbsp;self.locationY&amp;nbsp;+&amp;nbsp;1));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;l&amp;nbsp;=&amp;nbsp;checkList.length;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;l;&amp;nbsp;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;checkO&amp;nbsp;=&amp;nbsp;checkList[i];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;判断是否是空白拼图块&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(checkO.index&amp;nbsp;==&amp;nbsp;8)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;steps++;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;updateStepsTxt();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Block.exchangePosition(self,&amp;nbsp;checkO);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;首先，我们在这里看到了&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;isGameOver&lt;/code&gt;全局变量的作用，即在游戏结束后，阻断点击拼图块后的操作。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在点击了拼图块后，我们先获取该拼图块周围的拼图块，并将它们装入&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;checkList&lt;/code&gt;，再遍历&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;checkList&lt;/code&gt;，当判断到周围有空白拼图块后，即周围有&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;index&lt;/code&gt;属性等于8的拼图块后，先更新操作步数，然后将这两个拼图块交换位置。具体交换拼图块位置的方法详见如下代码：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;Block.exchangePosition&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(b1,&amp;nbsp;b2)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;b1x&amp;nbsp;=&amp;nbsp;b1.locationX,&amp;nbsp;b1y&amp;nbsp;=&amp;nbsp;b1.locationY,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b2x&amp;nbsp;=&amp;nbsp;b2.locationX,&amp;nbsp;b2y&amp;nbsp;=&amp;nbsp;b2.locationY,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b1Index&amp;nbsp;=&amp;nbsp;b1y&amp;nbsp;*&amp;nbsp;3&amp;nbsp;+&amp;nbsp;b1x,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b2Index&amp;nbsp;=&amp;nbsp;b2y&amp;nbsp;*&amp;nbsp;3&amp;nbsp;+&amp;nbsp;b2x;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;在地图块数组中交换两者位置&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;blockList.splice(b1Index,&amp;nbsp;1,&amp;nbsp;b2);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;blockList.splice(b2Index,&amp;nbsp;1,&amp;nbsp;b1);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;交换两者显示位置&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b1.setLocation(b2x,&amp;nbsp;b2y);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b2.setLocation(b1x,&amp;nbsp;b1y);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;判断游戏是否结束&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Block.isGameOver();
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;还有就是&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block.getBlock&lt;/code&gt;静态方法，用于获取给定的“数组位置”下的拼图块：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;Block.getBlock&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(x,&amp;nbsp;y)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;blockList[y&amp;nbsp;*&amp;nbsp;3&amp;nbsp;+&amp;nbsp;x];
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block.exchangePosition&lt;/code&gt;中，我们通过&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;Block.isGameOver&lt;/code&gt;判断玩家是否已将拼图复原：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;Block.isGameOver&amp;nbsp;=&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;reductionAmount&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;l&amp;nbsp;=&amp;nbsp;blockList.length;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;计算还原度&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;l;&amp;nbsp;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;b&amp;nbsp;=&amp;nbsp;blockList[i];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(b.index&amp;nbsp;==&amp;nbsp;i)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reductionAmount++;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;计算是否完全还原&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(reductionAmount&amp;nbsp;==&amp;nbsp;l)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;游戏结束&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gameOver();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;到这里，我们就实现了打乱和操作拼图块部分。&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;a style=&quot;color: rgb(0, 136, 219); cursor: pointer;&quot;&gt;&lt;/a&gt;90～120min&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;最后30min用于细枝末节上的处理，如显示拼图缩略图、显示&amp;amp;更新时间和步数，以及添加游戏结束画面，这些就交给如下冗长而简单的代码来完成吧：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs javascript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;function&amp;nbsp;showThumbnail()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;thumbnail&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LBitmap(imgBmpd);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thumbnail.scaleX&amp;nbsp;=&amp;nbsp;130&amp;nbsp;/&amp;nbsp;imgBmpd.width;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thumbnail.scaleY&amp;nbsp;=&amp;nbsp;130&amp;nbsp;/&amp;nbsp;imgBmpd.height;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thumbnail.x&amp;nbsp;=&amp;nbsp;(LGlobal.width&amp;nbsp;-&amp;nbsp;100)&amp;nbsp;/2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;thumbnail.y&amp;nbsp;=&amp;nbsp;410;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overLayer.addChild(thumbnail);
}function&amp;nbsp;addTimeTxt&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.lineWidth&amp;nbsp;=&amp;nbsp;3;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#54D9EF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.size&amp;nbsp;=&amp;nbsp;18;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.x&amp;nbsp;=&amp;nbsp;20;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.y&amp;nbsp;=&amp;nbsp;450;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overLayer.addChild(timeTxt);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;updateTimeTxt();
}function&amp;nbsp;updateTimeTxt&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeTxt.text&amp;nbsp;=&amp;nbsp;&amp;quot;时间：&amp;quot;&amp;nbsp;+&amp;nbsp;getTimeTxt(time);
}function&amp;nbsp;getTimeTxt&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;d&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Date(time);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;d.getMinutes()&amp;nbsp;+&amp;nbsp;&amp;quot;&amp;nbsp;:&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;d.getSeconds();
};function&amp;nbsp;addStepsTxt&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.lineWidth&amp;nbsp;=&amp;nbsp;3;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#54D9EF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.size&amp;nbsp;=&amp;nbsp;18;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.y&amp;nbsp;=&amp;nbsp;450;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overLayer.addChild(stepsTxt);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;updateStepsTxt();
}function&amp;nbsp;updateStepsTxt&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.text&amp;nbsp;=&amp;nbsp;&amp;quot;步数：&amp;quot;&amp;nbsp;+&amp;nbsp;steps;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stepsTxt.x&amp;nbsp;=&amp;nbsp;LGlobal.width&amp;nbsp;-&amp;nbsp;stepsTxt.getWidth()&amp;nbsp;-&amp;nbsp;20;
}function&amp;nbsp;onFrame&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(isGameOver)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;获取当前时间&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;currentTime&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;Date()).getTime();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;计算使用的时间并更新时间显示&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;time&amp;nbsp;=&amp;nbsp;currentTime&amp;nbsp;-&amp;nbsp;startTime;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;updateTimeTxt();
}function&amp;nbsp;gameOver&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isGameOver&amp;nbsp;=&amp;nbsp;true;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;resultLayer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LSprite();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.filters&amp;nbsp;=&amp;nbsp;[new&amp;nbsp;LDropShadowFilter()];
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.graphics.drawRoundRect(3,&amp;nbsp;&amp;quot;#BBBBBB&amp;quot;,&amp;nbsp;[0,&amp;nbsp;0,&amp;nbsp;350,&amp;nbsp;350,&amp;nbsp;5],&amp;nbsp;true,&amp;quot;#DDDDDD&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.x&amp;nbsp;=&amp;nbsp;(LGlobal.width&amp;nbsp;-&amp;nbsp;resultLayer.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.y&amp;nbsp;=&amp;nbsp;LGlobal.height&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.alpha&amp;nbsp;=&amp;nbsp;0;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overLayer.addChild(resultLayer);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;title&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.text&amp;nbsp;=&amp;nbsp;&amp;quot;游戏通关&amp;quot;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.weight&amp;nbsp;=&amp;nbsp;&amp;quot;bold&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.lineWidth&amp;nbsp;=&amp;nbsp;3;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#555555&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.size&amp;nbsp;=&amp;nbsp;30;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.x&amp;nbsp;=&amp;nbsp;(resultLayer.getWidth()&amp;nbsp;-&amp;nbsp;title.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title.y&amp;nbsp;=&amp;nbsp;30;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.addChild(title);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;usedTimeTxt&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.text&amp;nbsp;=&amp;nbsp;&amp;quot;游戏用时：&amp;quot;&amp;nbsp;+&amp;nbsp;getTimeTxt(time);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.size&amp;nbsp;=&amp;nbsp;20;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.lineWidth&amp;nbsp;=&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#555555&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.x&amp;nbsp;=&amp;nbsp;(resultLayer.getWidth()&amp;nbsp;-&amp;nbsp;usedTimeTxt.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedTimeTxt.y&amp;nbsp;=&amp;nbsp;130;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.addChild(usedTimeTxt);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;usedStepsTxt&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.text&amp;nbsp;=&amp;nbsp;&amp;quot;所用步数：&amp;quot;&amp;nbsp;+&amp;nbsp;steps;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.size&amp;nbsp;=&amp;nbsp;20;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.lineWidth&amp;nbsp;=&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#555555&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.x&amp;nbsp;=&amp;nbsp;usedTimeTxt.x;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usedStepsTxt.y&amp;nbsp;=&amp;nbsp;180;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.addChild(usedStepsTxt);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;hintTxt&amp;nbsp;=&amp;nbsp;new&amp;nbsp;LTextField();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.text&amp;nbsp;=&amp;nbsp;&amp;quot;-&amp;nbsp;点击屏幕重新开始&amp;nbsp;-&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.size&amp;nbsp;=&amp;nbsp;23;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.stroke&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.lineWidth&amp;nbsp;=&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.lineColor&amp;nbsp;=&amp;nbsp;&amp;quot;#888888&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.color&amp;nbsp;=&amp;nbsp;&amp;quot;#FFFFFF&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.x&amp;nbsp;=&amp;nbsp;(resultLayer.getWidth()&amp;nbsp;-&amp;nbsp;hintTxt.getWidth())&amp;nbsp;/&amp;nbsp;2;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hintTxt.y&amp;nbsp;=&amp;nbsp;260;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resultLayer.addChild(hintTxt);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LTweenLite.to(resultLayer,&amp;nbsp;0.5,&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;alpha&amp;nbsp;:&amp;nbsp;0.7,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;y&amp;nbsp;:&amp;nbsp;(LGlobal.height&amp;nbsp;-&amp;nbsp;resultLayer.getHeight())&amp;nbsp;/&amp;nbsp;2,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onComplete&amp;nbsp;:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;点击界面重新开始游戏&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.addEventListener(LMouseEvent.MOUSE_UP,&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gameLayer.removeAllChild();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overLayer.removeAllChild();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stageLayer.removeAllEventListener();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;startGame();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});
}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;Ok，2h下来，整个游戏就搞定咯～不得不表扬一下lufylegend这个游戏引擎，实在是可以大幅提升开发效率。&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;a style=&quot;color: rgb(0, 136, 219); cursor: pointer;&quot;&gt;&lt;/a&gt;源代码下载&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;最后奉上源代码：&lt;a href=&quot;https://yuehaowang.github.io/downloads/puzzle.zip&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;