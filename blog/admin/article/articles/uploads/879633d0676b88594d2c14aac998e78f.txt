&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;。&lt;/p&gt;&lt;h2 style=&quot;margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;事件流&lt;/h2&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;事件流描述的是从页面中接收事件的顺序，或者说是事件在页面中传播的顺序。&lt;/strong&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;IE的事件流叫做&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;事件冒泡（event bubbling）&lt;/strong&gt;：由最具体的元素开始执行事件，然后逐级向上传播到 window 对象。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;网景团队提出的事件流叫做&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;事件捕获（event capturing）&lt;/strong&gt;：由最外层的 window 对象开始执行事件，然后逐渐向下传播到最具体的元素。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;下面我们做个小实验来说明这两种事件流的不同之处：&lt;/p&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs xml&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;html&amp;nbsp;文档&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&amp;lt;html&amp;nbsp;lang=&amp;quot;en&amp;quot;&amp;gt;&amp;lt;head&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;事件流&amp;nbsp;实验&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&amp;quot;test&amp;quot;&amp;nbsp;style=&amp;quot;font-size:3em;&amp;quot;&amp;gt;点我点我，我是div&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;事件冒泡var&amp;nbsp;div&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
div.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;div&amp;quot;);
},&amp;nbsp;false);document.body.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;body&amp;quot;);
},&amp;nbsp;false);document.documentElement.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;html&amp;quot;);
},&amp;nbsp;false);document.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;document&amp;quot;);
},&amp;nbsp;false);window.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;window&amp;quot;);
},&amp;nbsp;false);&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20160930/1475206091777404.png&quot; alt=&quot;event-bubbling.png&quot;/&gt;&lt;/p&gt;&lt;pre class=&quot;brush: bash; gutter: true; first-line: 1 hljs coffeescript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;点击div，控制端会打印如下：
i&amp;nbsp;am&amp;nbsp;div
i&amp;nbsp;am&amp;nbsp;body
i&amp;nbsp;am&amp;nbsp;html
i&amp;nbsp;am&amp;nbsp;documenti&amp;nbsp;am&amp;nbsp;window&lt;/pre&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;事件捕获var&amp;nbsp;div&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
div.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;div&amp;quot;);
},&amp;nbsp;true);document.body.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;body&amp;quot;);
},&amp;nbsp;true);document.documentElement.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;html&amp;quot;);
},&amp;nbsp;true);document.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;document&amp;quot;);
},&amp;nbsp;true);window.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;window&amp;quot;);
},&amp;nbsp;true);&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20160930/1475206091209472.png&quot; alt=&quot;event-capturing.png&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;图片经过二次处理，略丑，请见谅！&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs coffeescript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;点击div，控制端会打印如下：
i&amp;nbsp;am&amp;nbsp;windowi&amp;nbsp;am&amp;nbsp;documenti&amp;nbsp;am&amp;nbsp;html
i&amp;nbsp;am&amp;nbsp;body
i&amp;nbsp;am&amp;nbsp;div&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;可以看出，&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;事件冒泡和事件捕获是两种完全相反的事件流&lt;/strong&gt;。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;平时，一般都是在使用事件冒泡，只在特殊情况下使用事件捕获。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;DOM2级事件规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段。&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;事件冒泡和事件捕获混合一下var&amp;nbsp;div&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
div.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;div&amp;quot;);
},&amp;nbsp;true);document.body.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;body&amp;quot;);
},&amp;nbsp;false);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;改为在冒泡阶段调用事件处理程序document.documentElement.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;html&amp;quot;);
},&amp;nbsp;true);document.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;document&amp;quot;);
},&amp;nbsp;true);window.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;window&amp;quot;);
},&amp;nbsp;false);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;改为在冒泡阶段调用事件处理程序&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这个图片是直接从书上摘得，自己脑补一下，把 window 对象自行添上去吧！&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20160930/1475206092420349.jpg&quot; alt=&quot;dom2-event.jpg&quot;/&gt;&lt;/p&gt;&lt;pre class=&quot;brush: bash; gutter: true; first-line: 1 hljs coffeescript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;点击div，控制端会打印如下：
i&amp;nbsp;am&amp;nbsp;documenti&amp;nbsp;am&amp;nbsp;html
i&amp;nbsp;am&amp;nbsp;div
i&amp;nbsp;am&amp;nbsp;body
i&amp;nbsp;am&amp;nbsp;window&lt;/pre&gt;&lt;h3 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;事件处理程序&lt;/h3&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;事件处理程序：&lt;/strong&gt;指的是响应处理某个事件的函数&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;HTML 事件处理程序&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;某个元素支持的每种事件，都可以使用一个与相应事件处理程序同名的 HTML 特性来指定。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs xml&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;情况一&amp;lt;button&amp;nbsp;onclick=&amp;quot;alert(&amp;#39;I&amp;nbsp;am&amp;nbsp;button!&amp;#39;);&amp;quot;&amp;gt;按钮&amp;lt;/button&amp;gt;//&amp;nbsp;情况二&amp;lt;button&amp;nbsp;onclick=&amp;quot;show();&amp;quot;&amp;gt;按钮&amp;lt;/button&amp;gt;&amp;lt;script&amp;gt;function&amp;nbsp;show(){
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;button!&amp;quot;);
}&amp;lt;/script&amp;gt;&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;建议永远不要使用这种方式为元素添加事件，因为这种方法有一个巨大的缺点，就是使得 HTML 与 JavaScript 的代码紧密耦合，不符合网页设计的行为与结构分离。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;DOM0 级事件处理程序&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;每个元素（包括 window 和 document）都有自己的事件处理程序属性&lt;/strong&gt;，比如 onclick、onmouseup 等。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;把上面的代码改写如下：&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;button&amp;nbsp;id=&amp;quot;test&amp;quot;&amp;gt;按钮&amp;lt;/button&amp;gt;var&amp;nbsp;button&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
button.onclick&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;//&amp;nbsp;this&amp;nbsp;对象指向&amp;nbsp;button&amp;nbsp;元素
&amp;nbsp;&amp;nbsp;console.log(this);
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;button!&amp;quot;);
};/*&amp;nbsp;&amp;nbsp;删除指定的事件处理程序&amp;nbsp;&amp;nbsp;*/button.onclick&amp;nbsp;=&amp;nbsp;null;&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;DOM2 级事件处理程序&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;DOM2 级事件&lt;/strong&gt;&amp;nbsp;定义了两个方法，用来处理指定和删除事件处理程序的操作：&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;addEventListener()&lt;/strong&gt;和&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;removeEventListener()&lt;/strong&gt;。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这两个方法都有三个参数，第一个参数是事件名，第二个参数是作为事件处理程序的函数，第三个参数是一个布尔值，默认值是 false，表示在冒泡阶段调用事件处理程序，如果这个值是 true，表示在捕获阶段调用事件处理程序。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;继续改写上面的代码：&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;var&amp;nbsp;button&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);function&amp;nbsp;show(){&amp;nbsp;&amp;nbsp;//&amp;nbsp;this&amp;nbsp;对象指向&amp;nbsp;button&amp;nbsp;元素
&amp;nbsp;&amp;nbsp;console.log(this);
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;button!&amp;quot;);
}//&amp;nbsp;添加事件处理程序button.addEventListener(&amp;quot;click&amp;quot;,show,&amp;nbsp;false);
button.addEventListener(&amp;quot;click&amp;quot;,function(){
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;second&amp;nbsp;alert!&amp;quot;);
},false);//&amp;nbsp;删除事件处理程序button.removeEventListener(&amp;quot;click&amp;quot;,show,&amp;nbsp;false);&amp;nbsp;//&amp;nbsp;删除成功button.removeEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;删除失败
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;second&amp;nbsp;alert!&amp;quot;);
},false);&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;使用 DOM2 级方法添加事件处理程序的主要好处是可以为一个元素添加多个事件处理程序。&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;如果 addEventListener() 添加的事件处理函数是匿名函数，则无法通过 removeEventListener() 删除这个事件处理程序。&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;IE 事件处理程序&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;IE8 以及更早的 IE 版本，只支持事件冒泡，不支持 addEventListener() 和 removeEventListener()，但是它实现了与这两个方法类似的两个方法：&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;attachEvent()&lt;/strong&gt;&amp;nbsp;和&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;detachEvent()&lt;/strong&gt;。这两个方法只有两个参数，一个事件名称（是 onclick，不是 click），一个事件处理函数。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;与 addEventListener() 不同，使用attachEvent() 方法的情况下，事件处理函数会在全局作用域下运行，所以 this 等于 window，这一点需要特别注意。&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;var&amp;nbsp;button&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
button.attachEvent(&amp;quot;onclick&amp;quot;,&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;//&amp;nbsp;this&amp;nbsp;对象指向了全局作用域，即&amp;nbsp;window
&amp;nbsp;&amp;nbsp;console.log(this);
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;button!&amp;quot;);
});
button.attachEvent(&amp;quot;onclick&amp;quot;,function(){
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;second&amp;nbsp;alert!&amp;quot;);
});&amp;nbsp;
//&amp;nbsp;上面也是为同一个按钮绑定了两个事件处理程序button.detachEvent(&amp;quot;onclick&amp;quot;,function(){&amp;nbsp;//&amp;nbsp;删除失败
&amp;nbsp;&amp;nbsp;alert(&amp;quot;I&amp;nbsp;am&amp;nbsp;second&amp;nbsp;alert!&amp;quot;);
});&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;除非你想使你的程序兼容至 IE8- 浏览器，否则不要使用这两个函数。&lt;/strong&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;浏览器默认行为&lt;/h3&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;对于一些特定的事件，浏览器有它默认的行为&lt;/strong&gt;。比如：点击链接会进行跳转到指定的页面、点击鼠标右键会呼出浏览器右键菜单、填写表单时按回车会自动提交到服务器等。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;默认的浏览器行为和冒泡行为是独立的，取消事件默认行为是不会取消事件冒泡的，反之亦然。同一个元素的多个事件处理函数也是相互独立的。&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs php&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;div&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;a&amp;nbsp;id=&amp;quot;test&amp;quot;&amp;nbsp;href=&amp;quot;http://baidu.com&amp;quot;&amp;gt;点我点我，我是链接&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;var&amp;nbsp;link&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);//&amp;nbsp;方法一&amp;nbsp;&amp;nbsp;&amp;nbsp;event.preventDefault()link.onclick&amp;nbsp;=&amp;nbsp;function(event){
&amp;nbsp;&amp;nbsp;console.log(&amp;quot;You&amp;nbsp;click!&amp;quot;);
&amp;nbsp;&amp;nbsp;event.preventDefault();
};//&amp;nbsp;方法二&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;falselink.onclick&amp;nbsp;=&amp;nbsp;function(event){
&amp;nbsp;&amp;nbsp;console.log(&amp;quot;You&amp;nbsp;click!&amp;quot;);&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;
};&lt;/pre&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;参考：&lt;/strong&gt;&lt;a href=&quot;http://jscode.me/topic/155/%E4%BA%8B%E4%BB%B6-4-%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA-%E5%AE%87%E5%8D%BF&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;事件-4. 浏览器默认行为-宇卿&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;事件对象 event&lt;/h3&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;在触发 DOM 上的某个事件时，会产生一个事件对象 event，这个对象中包含着所有与该事件有关的信息。&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;event 对象只存在于事件处理程序执行期间，一旦执行完毕，立即被销毁。&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs cs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;div&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;a&amp;nbsp;id=&amp;quot;test&amp;quot;&amp;nbsp;href=&amp;quot;http://baidu.com&amp;quot;&amp;gt;点我点我，我是链接&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;/*&amp;nbsp;下列&amp;nbsp;event&amp;nbsp;对象的属性和方法都是只读的&amp;nbsp;&amp;nbsp;*/var&amp;nbsp;link&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
link.onclick&amp;nbsp;=&amp;nbsp;function(event){&amp;nbsp;&amp;nbsp;//&amp;nbsp;判断当前事件是否会向&amp;nbsp;DOM&amp;nbsp;树上层元素冒泡
&amp;nbsp;&amp;nbsp;console.log(event.bubbles);&amp;nbsp;&amp;nbsp;//&amp;nbsp;判断是否可以取消事件的默认行为
&amp;nbsp;&amp;nbsp;console.log(event.cancelable);&amp;nbsp;&amp;nbsp;//&amp;nbsp;使用该方法可以取消事件的默认行为（使用前提是&amp;nbsp;cancelable&amp;nbsp;属性的值为&amp;nbsp;true）
&amp;nbsp;&amp;nbsp;event.preventDefault();&amp;nbsp;&amp;nbsp;//&amp;nbsp;判断是否已经调用了&amp;nbsp;preventDefault()&amp;nbsp;方法（DOM3级事件新增）
&amp;nbsp;&amp;nbsp;console.log(event.defaultPrevented);&amp;nbsp;&amp;nbsp;//&amp;nbsp;指向事件遍历&amp;nbsp;DOM&amp;nbsp;时，识别事件的当前目标对象
&amp;nbsp;&amp;nbsp;console.log(event.currentTarget);&amp;nbsp;&amp;nbsp;//&amp;nbsp;指向触发事件的对象
&amp;nbsp;&amp;nbsp;console.log(event.target);&amp;nbsp;&amp;nbsp;//&amp;nbsp;表示事件流当前处于哪一个阶段
&amp;nbsp;&amp;nbsp;//&amp;nbsp;值为&amp;nbsp;1&amp;nbsp;表示在捕获阶段，值为&amp;nbsp;2&amp;nbsp;表示处于目标阶段，值为&amp;nbsp;3&amp;nbsp;表示在冒泡阶段
&amp;nbsp;&amp;nbsp;console.log(event.eventPhase);&amp;nbsp;&amp;nbsp;//&amp;nbsp;返回一个字符串,&amp;nbsp;表示该事件对象的事件类型
&amp;nbsp;&amp;nbsp;console.log(event.type);&amp;nbsp;&amp;nbsp;//&amp;nbsp;立即停止当前事件在&amp;nbsp;DOM&amp;nbsp;层次中的传播，即取消进一步的事件捕获或冒泡
&amp;nbsp;&amp;nbsp;event.stopPropagation();
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;为了进一步说明 event.stopPropagation() 的运行效果，借用前面的代码，更改如下：&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;事件冒泡和事件捕获混合一下var&amp;nbsp;div&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
div.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;div&amp;quot;);
},&amp;nbsp;true);document.body.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;body&amp;quot;);
},&amp;nbsp;false);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;改为在冒泡阶段调用事件处理程序document.documentElement.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;html&amp;quot;);
&amp;nbsp;&amp;nbsp;event.stopPropagation();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;立即停止事件在&amp;nbsp;DOM&amp;nbsp;中的传播},&amp;nbsp;true);document.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;document&amp;quot;);
},&amp;nbsp;true);window.addEventListener(&amp;quot;click&amp;quot;,function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;i&amp;nbsp;am&amp;nbsp;window&amp;quot;);
},&amp;nbsp;false);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;改为在冒泡阶段调用事件处理程序&lt;/pre&gt;&lt;pre class=&quot;brush: bash; gutter: true; first-line: 1 hljs coffeescript&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;点击div，控制端会打印如下：
i&amp;nbsp;am&amp;nbsp;documenti&amp;nbsp;am&amp;nbsp;html&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;看到了吧，后面元素的事件就不会被激发了。&lt;/p&gt;&lt;h3 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;事件类型&lt;/h3&gt;&lt;h4 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;UI 事件&lt;/h4&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;UI 事件指的是简单的用户界面事件&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;load 事件：&lt;/strong&gt;当页面所有资源（比如图像、css文件、js文件等资源）完全加载完毕后，就会触发 window 上面的 load 事件。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;当然，我们也可以单独为某个元素设置 load 事件，比如为一个图片绑定这个事件，就可以检测这个图片是否加载完毕了。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;img&amp;nbsp;id=&amp;quot;myImg&amp;quot;&amp;nbsp;src=&amp;quot;1.jpg&amp;quot;&amp;nbsp;/&amp;gt;var&amp;nbsp;img&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;myImg&amp;quot;);
img.onload&amp;nbsp;=&amp;nbsp;function(){
&amp;nbsp;&amp;nbsp;alert(&amp;quot;Image&amp;nbsp;loaded!&amp;quot;);
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;scroll 事件：&lt;/strong&gt;在文档被滚动期间，重复触发该事件。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;window.onscroll&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Scroll!&amp;quot;);
};&lt;/pre&gt;&lt;h4 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;焦点事件&lt;/h4&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;焦点事件会在页面元素获得或失去焦点时触发。&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;注意：&lt;/strong&gt;默认情况下，只有部分 html 元素能获得鼠标焦点（如 input，a），很大一部分 html 元素是不能获得鼠标焦点的（如 div，img），这些能够获得鼠标焦点的元素就是&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;focusable&lt;/strong&gt;&amp;nbsp;元素。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;不过，可以通过为这些默认没有焦点事件的元素添加一个&amp;nbsp;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/tabIndex&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;tabindex&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;属性，从而使它可以支持焦点事件。&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;document.activeElement：&lt;/strong&gt;返回当前页面中获得焦点的元素，如果没有某个元素获得焦点，则该属性的值为当前页面中的元素&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;document.hasFocus()：&lt;/strong&gt;判断当前文档或者当前文档的子节点是否获得了焦点&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;HTMLElement.focus()：&lt;/strong&gt;使得指定的元素获得焦点（前提是这个元素是一个可以获得焦点的元素）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;HTMLElement.blur()：&lt;/strong&gt;移除当前元素获得的焦点&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;上面是一些 HTML5 中添加的焦点管理 API。下面说焦点事件：&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;focus 事件：&lt;/strong&gt;在元素获得焦点时触发，这个事件不会冒泡&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;blur 事件：&lt;/strong&gt;在元素失去焦点时触发，这个事件不会冒泡&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;focusin 事件：&lt;/strong&gt;在元素获得焦点时触发，与 focus 事件等价，但会冒泡&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;focusout 事件：&lt;/strong&gt;在元素失去焦点时触发，与 blur 事件等价，但会冒泡&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;img&amp;nbsp;id=&amp;quot;img&amp;quot;&amp;nbsp;src=&amp;quot;1.jpg&amp;quot;&amp;nbsp;tabindex=&amp;quot;1&amp;quot;&amp;nbsp;/&amp;gt;var&amp;nbsp;img&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;img&amp;quot;);document.body.onscroll&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;img.blur();
};
img.onfocus&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Img&amp;nbsp;focused!&amp;quot;);
};
img.onblur&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Img&amp;nbsp;lose&amp;nbsp;focus!&amp;quot;);
};
img.onclick&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(document.activeElement);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(document.hasFocus());
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;注意：&lt;/strong&gt;&amp;nbsp;focusin 和 focusout 事件，所有的 Firefox 版本都不支持，&lt;a href=&quot;http://caniuse.com/#search=focusin&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;看这里&lt;/a&gt;。chrome 和 safari 中只有通过 addEventListener 方式绑定这两个事件才能正常使用，其他方式绑定都不行。&lt;/p&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000003942014&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;说说focus /focusin /focusout /blur 事件&lt;/a&gt;（推荐）&lt;br/&gt;&lt;a href=&quot;https://html.spec.whatwg.org/#focus-management-apis&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;（WHATWG）Focus management APIs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;鼠标与滚轮事件&lt;/h4&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;DOM3 级事件中定义了9个鼠标事件。&lt;/p&gt;&lt;/blockquote&gt;&lt;pre class=&quot;brush: html; gutter: true; first-line: 1 hljs xml&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;&amp;lt;body&amp;gt;
&amp;nbsp;&amp;lt;div&amp;nbsp;id=&amp;quot;test&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;button&amp;gt;按钮&amp;lt;/button&amp;gt;
&amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;//&amp;nbsp;css
div&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;width:&amp;nbsp;300px;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;height:&amp;nbsp;300px;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;margin:&amp;nbsp;50px&amp;nbsp;auto;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border:&amp;nbsp;1px&amp;nbsp;solid&amp;nbsp;#aaa;
&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mouseover 事件：&lt;/strong&gt;鼠标指针首次进入一个元素边界之内时触发，会冒泡&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mouseout 事件：&lt;/strong&gt;鼠标指针移出这个元素边界时触发，会冒泡&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;var&amp;nbsp;test&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
test.onmouseover&amp;nbsp;=&amp;nbsp;function(event){
&amp;nbsp;&amp;nbsp;event.target.style.border&amp;nbsp;=&amp;nbsp;&amp;quot;3px&amp;nbsp;solid&amp;nbsp;#666&amp;quot;;
};
test.onmouseout&amp;nbsp;=&amp;nbsp;function(event){
&amp;nbsp;&amp;nbsp;event.target.style.border&amp;nbsp;=&amp;nbsp;&amp;quot;none&amp;quot;;
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mouseenter 事件：&lt;/strong&gt;鼠标指针首次移动到元素范围之内时触发，不冒泡&lt;br/&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mouseleave 事件：&lt;/strong&gt;鼠标指针移动到元素范围之外时触发，不冒泡&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;var&amp;nbsp;test&amp;nbsp;=&amp;nbsp;document.getElementById(&amp;quot;test&amp;quot;);
test.onmouseenter&amp;nbsp;=&amp;nbsp;function(event){
&amp;nbsp;&amp;nbsp;event.target.style.border&amp;nbsp;=&amp;nbsp;&amp;quot;10px&amp;nbsp;solid&amp;nbsp;#666&amp;quot;;
};
test.onmouseleave&amp;nbsp;=&amp;nbsp;function(event){
&amp;nbsp;&amp;nbsp;event.target.style.border&amp;nbsp;=&amp;nbsp;&amp;quot;none&amp;quot;;
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mousemove 事件：&lt;/strong&gt;当鼠标在元素内部移动时重复触发，会冒泡&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;这里写一个鼠标在&amp;nbsp;body&amp;nbsp;内移动时，背景颜色随机变化的脚本document.body.onmousemove&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;var&amp;nbsp;r&amp;nbsp;=&amp;nbsp;Math.floor(Math.random()&amp;nbsp;*&amp;nbsp;256)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;g&amp;nbsp;=&amp;nbsp;Math.floor(Math.random()&amp;nbsp;*&amp;nbsp;256)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b&amp;nbsp;=&amp;nbsp;Math.floor(Math.random()&amp;nbsp;*&amp;nbsp;256);&amp;nbsp;&amp;nbsp;document.body.style.background&amp;nbsp;=&amp;nbsp;&amp;quot;rgb(&amp;quot;+r+&amp;quot;,&amp;quot;+g+&amp;quot;,&amp;quot;+b+&amp;quot;)&amp;quot;;
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mousedown 事件：&lt;/strong&gt;用户通过按下任意鼠标按钮时触发&lt;br/&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;mouseup 事件：&lt;/strong&gt;用户释放鼠标按钮时触发&lt;br/&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;click 事件：&lt;/strong&gt;用户单击鼠标左键时或按下回车键时触发&lt;br/&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;dblclick 事件：&lt;/strong&gt;用户双击鼠标左键时触发&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;var&amp;nbsp;body&amp;nbsp;=&amp;nbsp;document.body;
body.onmousedown&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Mouse&amp;nbsp;down!&amp;quot;);
};
body.onmouseup&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Mouse&amp;nbsp;up!&amp;quot;);
};
body.onclick&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;One&amp;nbsp;click!&amp;quot;);
};
body.ondblclick&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Double&amp;nbsp;click!&amp;quot;);
};&lt;/pre&gt;&lt;pre class=&quot;brush: bash; gutter: true; first-line: 1 hljs swift&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;双击&amp;nbsp;body，控制端打印：Mouse&amp;nbsp;down!Mouse&amp;nbsp;up!One&amp;nbsp;click!Mouse&amp;nbsp;down!Mouse&amp;nbsp;up!One&amp;nbsp;click!Double&amp;nbsp;click!&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;只有在同一个元素上相继触发 mousedown 和 mouseup 事件，才会触发 click 事件，缺一不可。类似地，只有连续触发两次 click 事件，才会触发 dblclick 事件。&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;获取点击坐标&lt;/strong&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;clientX 和 clientY：&lt;/strong&gt;鼠标指针在视口中的坐标&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;pageX 和 pageY：&lt;/strong&gt;鼠标指针在页面中的坐标&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;screenX 和 screenY：&lt;/strong&gt;鼠标指针在屏幕中的坐标&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在页面没有滚动的情况下，pageX 和 pageY 的值与 clientX 和 clientY 的值相等。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;document.body.onclick&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Client:&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;&amp;quot;(&amp;quot;&amp;nbsp;+&amp;nbsp;event.clientX&amp;nbsp;+&amp;nbsp;&amp;quot;,&amp;quot;&amp;nbsp;+&amp;nbsp;event.clientY&amp;nbsp;+&amp;nbsp;&amp;quot;)&amp;quot;);&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Page:&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;&amp;quot;(&amp;quot;&amp;nbsp;+&amp;nbsp;event.pageX&amp;nbsp;+&amp;nbsp;&amp;quot;,&amp;quot;&amp;nbsp;+&amp;nbsp;event.pageY&amp;nbsp;+&amp;nbsp;&amp;quot;)&amp;quot;);&amp;nbsp;&amp;nbsp;console.log(&amp;quot;Screen:&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;&amp;quot;(&amp;quot;&amp;nbsp;+&amp;nbsp;event.screenX&amp;nbsp;+&amp;nbsp;&amp;quot;,&amp;quot;&amp;nbsp;+&amp;nbsp;event.screenY&amp;nbsp;+&amp;nbsp;&amp;quot;)&amp;quot;);
};&lt;/pre&gt;&lt;h4 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;键盘与文本事件&lt;/h4&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;keydown 事件：&lt;/strong&gt;当用户按下任意键时触发，而且如果按住不放的话，会重复触发此事件&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;keypress 事件：&lt;/strong&gt;当用户按下任意字符键时触发，而且如果按住不放的话，会重复触发此事件&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;keyup 事件：&lt;/strong&gt;当用户释放键盘上的按键时触发&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在用户按下一个字符键并且立马释放这个按键的过程中，先触发 keydown 事件，再触发 keypress 事件，最后触发 keyup 事件。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;window.onkeydown&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;console.log(&amp;quot;on&amp;nbsp;key&amp;nbsp;down&amp;quot;);
};window.onkeyup&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;if&amp;nbsp;(event.keyCode&amp;nbsp;===&amp;nbsp;65)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(event.key);
&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;console.log(&amp;quot;one&amp;nbsp;key&amp;nbsp;up&amp;quot;);
};window.onkeypress&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;console.log(&amp;quot;one&amp;nbsp;key&amp;nbsp;press&amp;quot;);
};&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;为了知道自己按下的是哪个按键，可以使用 event.which 来获得你按下按键的键码（比如字母 A 的键码为 65）。也可以通过键码属性（event.keyCode）来对特定的按键来进行响应。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode#Value_of_keyCode&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;键码参考表&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;发生 keypress 事件时，会存在一个 charCode 属性，返回这个按键代表字符的 ASCII 编码。&lt;a href=&quot;http://www.asciitable.com/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;ASCII table&lt;/a&gt;&lt;/p&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;event.which 返回一个 keyCode 或 charCode 值，详情看下面代码&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;String.fromCharCode() 静态方法可以将 event.which 转化为相应的字符。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;请自行粘贴复制于浏览器控制端测试//&amp;nbsp;分别输入&amp;nbsp;a&amp;nbsp;和&amp;nbsp;A//&amp;nbsp;A和a&amp;nbsp;的&amp;nbsp;ASCII码分别为65,97window.onkeydown&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;if(event.keyCode&amp;nbsp;===&amp;nbsp;65){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;quot;（keydown&amp;nbsp;keyCode）You&amp;nbsp;press&amp;nbsp;&amp;#39;a&amp;#39;&amp;nbsp;or&amp;nbsp;&amp;#39;A&amp;#39;!&amp;quot;);
&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;if(event.charCode&amp;nbsp;===&amp;nbsp;65){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;quot;（keydown&amp;nbsp;charCode）You&amp;nbsp;press&amp;nbsp;&amp;#39;A&amp;#39;!&amp;quot;);
&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;console.log(&amp;quot;keydown&amp;nbsp;event.which&amp;nbsp;=&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;event.which);&amp;nbsp;&amp;nbsp;console.log(&amp;quot;（keydown：）&amp;quot;&amp;nbsp;+&amp;nbsp;String.fromCharCode(event.which));
};window.onkeypress&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;if(event.keyCode&amp;nbsp;===&amp;nbsp;65){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;quot;（keypress&amp;nbsp;keyCode）You&amp;nbsp;press&amp;nbsp;&amp;#39;A&amp;#39;!&amp;quot;);
&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;if(event.charCode&amp;nbsp;===&amp;nbsp;65){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;quot;（keypress&amp;nbsp;charCode）You&amp;nbsp;press&amp;nbsp;&amp;#39;A&amp;#39;,not&amp;nbsp;&amp;#39;a&amp;#39;!&amp;quot;);
&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;console.log(&amp;quot;keypress&amp;nbsp;event.which&amp;nbsp;=&amp;nbsp;&amp;quot;&amp;nbsp;+&amp;nbsp;event.which);&amp;nbsp;&amp;nbsp;console.log(&amp;quot;（keypress：）&amp;quot;&amp;nbsp;+&amp;nbsp;String.fromCharCode(event.which));
};&lt;/pre&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;在 DOM3 级事件中，做了一些变化，不再推荐使用 keyCode、charCode、which 属性，而是出现了两个新属性：&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;key&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;char&lt;/code&gt;，用来替代&amp;nbsp;&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;keyCode&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code style=&quot;margin: 0px 4px; padding: 1px 4px; font-family: &amp;quot;courier new&amp;quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);&quot;&gt;charCode&lt;/code&gt;&amp;nbsp;属性。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;但是不建议使用 key、char 属性，因为有一部分浏览器对他支持的不是很好。&lt;a href=&quot;http://caniuse.com/#search=KeyboardEvent.key&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;点这里&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;参考：&lt;/strong&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004313462&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;JavaScript 事件——“事件类型”中“键盘与文本事件”的注意要点&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;变动事件&lt;/h4&gt;&lt;blockquote style=&quot;margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;&lt;p style=&quot;margin-top: 0px; padding: 0px;&quot;&gt;变动事件是在 DOM 结构发生变化时触发&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在 DOM2 中定义了多个变动事件，但是在 DOM3 中又废除了一些，在这里先简单提一下有这个东西，以后用到再作补充。&lt;/p&gt;&lt;h4 style=&quot;margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &amp;quot;microsoft yahei&amp;quot;; white-space: normal;&quot;&gt;HTML5 事件&lt;/h4&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;contextmenu 事件：&lt;/strong&gt;单击鼠标右键，会触发这个事件并调出页面的上下文菜单。这个事件是鼠标事件的一种，并且支持冒泡。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;在上面的例子中，我们演示了利用 contextmenu 事件来设置自定义右键菜单，以及屏蔽右键菜单。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;然而，屏蔽右键菜单却难不倒高手，&lt;a href=&quot;https://greasyfork.org/zh-CN&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;Greasy Fork&lt;/a&gt;&amp;nbsp;上面有一个脚本（&lt;a href=&quot;https://greasyfork.org/zh-CN/scripts/14146-%E7%BD%91%E9%A1%B5%E9%99%90%E5%88%B6%E8%A7%A3%E9%99%A4&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;网页限制解除&lt;/a&gt;），专门来打破对右键菜单有限制的页面。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;beforeunload 事件：&lt;/strong&gt;当浏览器窗口，文档或其资源将要卸载时或者刷新页面时，会触发这个事件&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/Events/beforeunload&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 136, 219); text-decoration: none; cursor: pointer;&quot;&gt;【MDN】&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;下面有几点需要注意一下：&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;1. 如果处理函数为 Event 对象的&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;returnValue&lt;/strong&gt;&amp;nbsp;属性赋值非空字符串，浏览器会弹出一个对话框，来询问用户是否确定要离开当前页面。没有赋值时，该事件不做任何响应。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;2. 从2011年5月25号开始，HTML5规范指出在此事件处理函数中，对于window.alert(), window.confirm(), 和 window.prompt() 的调用会被忽略。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;3. 旧版本的浏览器可能会在提示框里显示返回的信息，但是新版本浏览器都默认采用浏览器内设的提示信息。&lt;/p&gt;&lt;pre class=&quot;brush: javascript; gutter: true; first-line: 1 hljs&quot; style=&quot;margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &amp;quot;courier new&amp;quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;&quot;&gt;//&amp;nbsp;复制粘贴于浏览器控制端，然后关闭页面，会出现提示框window.addEventListener(&amp;quot;beforeunload&amp;quot;,&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;&amp;nbsp;var&amp;nbsp;message&amp;nbsp;=&amp;nbsp;&amp;quot;你真的要离开吗？&amp;quot;;
&amp;nbsp;&amp;nbsp;event.returnValue&amp;nbsp;=&amp;nbsp;message;&amp;nbsp;&amp;nbsp;return&amp;nbsp;message;
},&amp;nbsp;false);&lt;/pre&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;DOMContentLoaded 事件：&lt;/strong&gt;在页面文档形成完整的 DOM 树时触发，不理会图像、js文件、css文件等资源是否加载完毕&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;这个事件可以为 document 或 window 绑定，但实际目标是 document。这个事件会冒泡。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &amp;quot;microsoft yahei&amp;quot;; font-size: 14px; white-space: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;注意：&lt;/strong&gt;这个事件与 load 事件是不一样的，正常情况下，会早于 load 事件被触发。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;