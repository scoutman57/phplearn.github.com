&lt;p class=&quot;text&quot; style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; padding: 0px; width: 1020px; font-weight: bold; color: rgb(0, 0, 0); font-size: 24px; line-height: 36px;&quot;&gt;&lt;strong style=&quot;color: rgb(51, 51, 51); font-size: 1em; word-wrap: break-word;&quot;&gt;摘要：&lt;/strong&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-size: 16px;&quot;&gt;1什么是MVCMVC模式（Model-View-Controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。PHP中MVC模式也称Web MVC，从上世纪70年代进化而来 ...&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style=&quot;word-wrap: break-word; margin: 35px -20px 12px -24px; padding: 10px 20px 9px; font-size: 22px; font-weight: normal; font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; line-height: 18px; color: rgb(66, 139, 202); text-rendering: optimizeLegibility; border-left: 4px solid rgb(66, 139, 202);&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;1&amp;nbsp;什么是MVC&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;MVC模式&lt;/span&gt;&lt;/span&gt;（Model-View-Controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;模型&lt;/span&gt;&lt;/span&gt;（Model）、&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;视图&lt;/span&gt;&lt;/span&gt;（View）和&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;控制器&lt;/span&gt;&lt;/span&gt;（Controller）。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;PHP中MVC模式也称Web MVC，从上世纪70年代进化而来。MVC的目的是实现一种动态的程序设计，便于后续对程序的修改和扩展简化，并且使程序某一部分的重复利用成为可能。除此之外，此模式通过对复杂度的简化，使程序结构更加直观。软件系统通过对自身基本部份分离的同时，也赋予了各个基本部分应有的功能。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;MVC各部分的职能：&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;模型Model&lt;/span&gt;&amp;nbsp;– 管理&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;大部分的业务逻辑&lt;/span&gt;&lt;/span&gt;和&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;所有的数据库逻辑&lt;/span&gt;&lt;/span&gt;。模型提供了连接和操作数据库的抽象层。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;控制器Controller&lt;/span&gt;&amp;nbsp;- 负责响应用户请求、准备数据，以及决定如何展示数据。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;视图View&lt;/span&gt;&amp;nbsp;– 负责&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;渲染数据&lt;/span&gt;&lt;/span&gt;，通过HTML方式呈现给用户。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;img class=&quot;alignnone wp-image-874 size-full&quot; src=&quot;/ueditor/php/upload/image/20160930/1475205149517028.gif&quot; alt=&quot;MVC流程图&quot; width=&quot;500&quot; height=&quot;255&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;一个典型的Web MVC流程：&lt;/p&gt;&lt;ol style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Controller截获用户发出的请求；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Controller调用Model完成状态的读写操作；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Controller把数据传递给View；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;View渲染最终结果并呈献给用户。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 style=&quot;word-wrap: break-word; margin: 35px -20px 12px -24px; padding: 10px 20px 9px; font-size: 22px; font-weight: normal; font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; line-height: 18px; color: rgb(66, 139, 202); text-rendering: optimizeLegibility; border-left: 4px solid rgb(66, 139, 202);&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;2&amp;nbsp;为什么要自己开发MVC框架&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;网络上有大量优秀的MVC框架可供使用，本教程并不是为了开发一个全面的、终极的MVC框架解决方案，而是将它看作是一个很好的从内部学习PHP的机会，在此过程中，你将学习&lt;span style=&quot;word-wrap: break-word; text-decoration: underline;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;面向对象编程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;和&lt;span style=&quot;word-wrap: break-word; text-decoration: underline;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;MVC设计模式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，并学习到开发中的一些注意事项。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;更重要的是，你可以完全控制你的框架，并将你的想法融入到你开发的框架中。虽然不一定是做好的，但是你可以按照你的方式去开发功能和模块。&lt;/p&gt;&lt;h2 style=&quot;word-wrap: break-word; margin: 35px -20px 12px -24px; padding: 10px 20px 9px; font-size: 22px; font-weight: normal; font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; line-height: 18px; color: rgb(66, 139, 202); text-rendering: optimizeLegibility; border-left: 4px solid rgb(66, 139, 202);&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3 开始开发自己的MVC框架&lt;/span&gt;&lt;/h2&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.1 目录准备&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在开始开发前，让我们先来把项目建立好，假设我们建立的项目为 todo，MVC的框架可以命名为 FastPHP，那么接下来的第一步就是把目录结构先设置好。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;a href=&quot;http://www.awaimai.com/wp-content/uploads/2015/09/dir.jpg&quot; title=&quot;&quot; style=&quot;word-wrap: break-word; color: rgb(66, 139, 202); text-decoration: none; outline: none medium; transition-property: color; transition-duration: 0.3s; transition-timing-function: ease;&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-187&quot; src=&quot;/ueditor/php/upload/image/20160930/1475205150807495.jpg&quot; alt=&quot;PHP MVC简单目录&quot; width=&quot;191&quot; height=&quot;266&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;虽然在这个教程中不会使用到上面的所有的目录，但是为了以后程序的可拓展性，在一开始就把程序目录设置好使非常必要的。下面就具体说说每个目录的作用：&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;application&lt;/span&gt;&amp;nbsp;&lt;/span&gt;– 应用代码&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;config&lt;/span&gt;&amp;nbsp;&lt;/span&gt;– 程序配置或数据库配置&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;fastphp&lt;/span&gt;&lt;/span&gt;&amp;nbsp;- 框架核心目录&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;/span&gt;– 静态文件&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;runtime&lt;/span&gt;&amp;nbsp;&lt;/span&gt;- 临时数据目录&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;scripts&lt;/span&gt;&amp;nbsp;&lt;/span&gt;– 命令行工具&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.2 代码规范&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在目录设置好以后，我们接下来就要来规定一下代码的规范：&lt;/p&gt;&lt;ol style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;MySQL的表名需&lt;span style=&quot;word-wrap: break-word; text-decoration: underline; color: rgb(0, 128, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;小写&lt;/span&gt;&lt;/span&gt;，如：item，car&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;模块名（Models）需&lt;span style=&quot;word-wrap: break-word; text-decoration: underline; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;首字母大写&lt;/span&gt;&lt;/span&gt;，，并在名称后添加“Model”，如：ItemModel，CarModel&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;控制器（Controllers）需&lt;span style=&quot;word-wrap: break-word; text-decoration: underline; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;首字母大写&lt;/span&gt;&lt;/span&gt;，，并在名称中添加“Controller”，如：ItemController，CarController&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;视图（Views）部署结构为“控制器名/行为名”，如：item/view.php，car/buy.php&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;上述的一些规则是为了能在程序中更好的进行互相的调用。接下来就开始真正的PHP MVC编程了。&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.3 重定向&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;将所有的数据请求都重定向 index.php 文件，在 todo 目录下新建一个&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&amp;nbsp;.htaccess&amp;nbsp;&lt;/span&gt;&lt;/span&gt;文件，文件内容为：&lt;/p&gt;&lt;pre class=&quot;hljs apache&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;IfModule&amp;nbsp;mod_rewrite.c&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RewriteEngine&amp;nbsp;On

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;确保请求路径不是一个文件名或目录
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RewriteCond&amp;nbsp;%{REQUEST_FILENAME}&amp;nbsp;!-f&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RewriteCond&amp;nbsp;%{REQUEST_FILENAME}&amp;nbsp;!-d&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;重定向所有请求到&amp;nbsp;index.php?url=PATHNAME
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RewriteRule&amp;nbsp;^(.*)$&amp;nbsp;index.php?url=$1&amp;nbsp;[PT,L]&amp;lt;/IfModule&amp;gt;&lt;/pre&gt;&lt;p&gt;这样做的主要原因有：&lt;/p&gt;&lt;ol style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;程序有一个单一的入口；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;除静态程序，其他所有程序都重定向到 index.php 上；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;可以用来生成利于SEO的URL，想要更好的配置URL，后期可能会需要URL路由，这里先不做介绍了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.4 入口文件&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;做完上面的操作，就应该知道我们需要做什么了，没错！在 public 目录下添加&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;index.php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;文件，文件内容为：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php&amp;nbsp;//&amp;nbsp;应用目录为当前目录define(&amp;#39;APP_PATH&amp;#39;,&amp;nbsp;__DIR__.&amp;#39;/&amp;#39;);//&amp;nbsp;开启调试模式define(&amp;#39;APP_DEBUG&amp;#39;,&amp;nbsp;true);//&amp;nbsp;网站根URLdefine(&amp;#39;APP_URL&amp;#39;,&amp;nbsp;&amp;#39;http://localhost/fastphp&amp;#39;);//&amp;nbsp;加载框架require&amp;nbsp;&amp;#39;./fastphp/FastPHP.php&amp;#39;;&lt;/pre&gt;&lt;p&gt;注意，上面的PHP代码中，并没有添加PHP结束符号”?&amp;gt;”，这么做的主要原因是，&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;对于只有 PHP 代码的文件，结束标志(“?&amp;gt;”)最好不存在，PHP自身并不需要结束符号，不添加结束符号可以很大程度上防止末尾被添加额外的注入内容，让程序更加安全。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.5 配置文件和主请求&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在 index.php 中，我们对 fastphp&amp;nbsp;&amp;nbsp;文件夹下的 FastPHP.php 发起了请求，那么&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;FastPHP.php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;这个启动文件中到底会包含哪些内容呢？&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php//&amp;nbsp;初始化常量defined(&amp;#39;FRAME_PATH&amp;#39;)&amp;nbsp;or&amp;nbsp;define(&amp;#39;FRAME_PATH&amp;#39;,&amp;nbsp;__DIR__.&amp;#39;/&amp;#39;);
defined(&amp;#39;APP_PATH&amp;#39;)&amp;nbsp;or&amp;nbsp;define(&amp;#39;APP_PATH&amp;#39;,&amp;nbsp;dirname($_SERVER[&amp;#39;SCRIPT_FILENAME&amp;#39;]).&amp;#39;/&amp;#39;);
defined(&amp;#39;APP_DEBUG&amp;#39;)&amp;nbsp;or&amp;nbsp;define(&amp;#39;APP_DEBUG&amp;#39;,&amp;nbsp;false);
defined(&amp;#39;CONFIG_PATH&amp;#39;)&amp;nbsp;or&amp;nbsp;define(&amp;#39;CONFIG_PATH&amp;#39;,&amp;nbsp;APP_PATH.&amp;#39;config/&amp;#39;);
defined(&amp;#39;RUNTIME_PATH&amp;#39;)&amp;nbsp;or&amp;nbsp;define(&amp;#39;RUNTIME_PATH&amp;#39;,&amp;nbsp;APP_PATH.&amp;#39;runtime/&amp;#39;);//&amp;nbsp;包含配置文件require&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;config/config.php&amp;#39;;//包含核心框架类require&amp;nbsp;FRAME_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;Core.php&amp;#39;;//&amp;nbsp;实例化核心类$fast&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Core;
$fast-&amp;gt;run();&lt;/pre&gt;&lt;p&gt;&amp;nbsp;以上文件都其实可以直接在 index.php 文件中包含，常量也可以直接在 index.php 中定义，我们这么做的原因是为了在后期管理和拓展中更加的方便，所以把需要在一开始的时候就加载运行的程序统一放到一个单独的文件中引用。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;先来看看config文件下的&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;config .php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;文件，该文件的主要作用是设置一些程序的配置项及数据库连接等，主要内容为：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php
&amp;nbsp;/**&amp;nbsp;变量配置&amp;nbsp;**/
&amp;nbsp;define(&amp;#39;DB_NAME&amp;#39;,&amp;nbsp;&amp;#39;todo&amp;#39;);
define(&amp;#39;DB_USER&amp;#39;,&amp;nbsp;&amp;#39;root&amp;#39;);
define(&amp;#39;DB_PASSWORD&amp;#39;,&amp;nbsp;&amp;#39;root&amp;#39;);
define(&amp;#39;DB_HOST&amp;#39;,&amp;nbsp;&amp;#39;localhost&amp;#39;);&lt;/pre&gt;&lt;p&gt;应该说 config.php 涉及到的内容并不多，不过是一些&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;基础数据库&lt;/span&gt;&lt;/span&gt;的设置，再来看看 fastphp下的共用框架入口文件&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;Core.php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;应该怎么写。&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php/**
&amp;nbsp;*&amp;nbsp;FastPHP核心框架
&amp;nbsp;*/class&amp;nbsp;Core{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;运行程序
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;run()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;spl_autoload_register(array($this,&amp;nbsp;&amp;#39;loadClass&amp;#39;));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;setReporting();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;removeMagicQuotes();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;unregisterGlobals();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;Route();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;路由处理
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;Route()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$controllerName&amp;nbsp;=&amp;nbsp;&amp;#39;Index&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$action&amp;nbsp;=&amp;nbsp;&amp;#39;index&amp;#39;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!empty($_GET[&amp;#39;url&amp;#39;]))&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$url&amp;nbsp;=&amp;nbsp;$_GET[&amp;#39;url&amp;#39;];
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$urlArray&amp;nbsp;=&amp;nbsp;explode(&amp;#39;/&amp;#39;,&amp;nbsp;$url);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;获取控制器名
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$controllerName&amp;nbsp;=&amp;nbsp;ucfirst($urlArray[0]);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;获取动作名
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array_shift($urlArray);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$action&amp;nbsp;=&amp;nbsp;empty($urlArray[0])&amp;nbsp;?&amp;nbsp;&amp;#39;index&amp;#39;&amp;nbsp;:&amp;nbsp;$urlArray[0];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//获取URL参数
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array_shift($urlArray);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$queryString&amp;nbsp;=&amp;nbsp;empty($urlArray)&amp;nbsp;?&amp;nbsp;array()&amp;nbsp;:&amp;nbsp;$urlArray;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;数据为空的处理
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$queryString&amp;nbsp;&amp;nbsp;=&amp;nbsp;empty($queryString)&amp;nbsp;?&amp;nbsp;array()&amp;nbsp;:&amp;nbsp;$queryString;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;实例化控制器
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$controller&amp;nbsp;=&amp;nbsp;$controllerName&amp;nbsp;.&amp;nbsp;&amp;#39;Controller&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$dispatch&amp;nbsp;=&amp;nbsp;new&amp;nbsp;$controller($controllerName,&amp;nbsp;$action);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;如果控制器存和动作存在，这调用并传入URL参数
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;((int)method_exists($controller,&amp;nbsp;$action))&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;call_user_func_array(array($dispatch,&amp;nbsp;$action),&amp;nbsp;$queryString);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit($controller&amp;nbsp;.&amp;nbsp;&amp;quot;控制器不存在&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;检测开发环境
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;setReporting()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(APP_DEBUG&amp;nbsp;===&amp;nbsp;true)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;error_reporting(E_ALL);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ini_set(&amp;#39;display_errors&amp;#39;,&amp;#39;On&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;error_reporting(E_ALL);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ini_set(&amp;#39;display_errors&amp;#39;,&amp;#39;Off&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ini_set(&amp;#39;log_errors&amp;#39;,&amp;nbsp;&amp;#39;On&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ini_set(&amp;#39;error_log&amp;#39;,&amp;nbsp;RUNTIME_PATH.&amp;nbsp;&amp;#39;logs/error.log&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;删除敏感字符
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;stripSlashesDeep($value)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$value&amp;nbsp;=&amp;nbsp;is_array($value)&amp;nbsp;?&amp;nbsp;array_map(&amp;#39;stripSlashesDeep&amp;#39;,&amp;nbsp;$value)&amp;nbsp;:&amp;nbsp;stripslashes($value);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$value;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;检测敏感字符并删除
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;removeMagicQuotes()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;get_magic_quotes_gpc())&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$_GET&amp;nbsp;=&amp;nbsp;stripSlashesDeep($_GET&amp;nbsp;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$_POST&amp;nbsp;=&amp;nbsp;stripSlashesDeep($_POST&amp;nbsp;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$_COOKIE&amp;nbsp;=&amp;nbsp;stripSlashesDeep($_COOKIE);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$_SESSION&amp;nbsp;=&amp;nbsp;stripSlashesDeep($_SESSION);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;检测自定义全局变量（register&amp;nbsp;globals）并移除
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;unregisterGlobals()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(ini_get(&amp;#39;register_globals&amp;#39;))&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$array&amp;nbsp;=&amp;nbsp;array(&amp;#39;_SESSION&amp;#39;,&amp;nbsp;&amp;#39;_POST&amp;#39;,&amp;nbsp;&amp;#39;_GET&amp;#39;,&amp;nbsp;&amp;#39;_COOKIE&amp;#39;,&amp;nbsp;&amp;#39;_REQUEST&amp;#39;,&amp;nbsp;&amp;#39;_SERVER&amp;#39;,&amp;nbsp;&amp;#39;_ENV&amp;#39;,&amp;nbsp;&amp;#39;_FILES&amp;#39;);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;($array&amp;nbsp;as&amp;nbsp;$value)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;($GLOBALS[$value]&amp;nbsp;as&amp;nbsp;$key&amp;nbsp;=&amp;gt;&amp;nbsp;$var)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;($var&amp;nbsp;===&amp;nbsp;$GLOBALS[$key])&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unset($GLOBALS[$key]);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;自动加载控制器和模型类&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;function&amp;nbsp;loadClass($class)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$frameworks&amp;nbsp;=&amp;nbsp;FRAME_PATH&amp;nbsp;.&amp;nbsp;$class&amp;nbsp;.&amp;nbsp;&amp;#39;.class.php&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$controllers&amp;nbsp;=&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/controllers/&amp;#39;&amp;nbsp;.&amp;nbsp;$class&amp;nbsp;.&amp;nbsp;&amp;#39;.class.php&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$models&amp;nbsp;=&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/models/&amp;#39;&amp;nbsp;.&amp;nbsp;$class&amp;nbsp;.&amp;nbsp;&amp;#39;.class.php&amp;#39;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(file_exists($frameworks))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;加载框架核心类
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;$frameworks;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;elseif&amp;nbsp;(file_exists($controllers))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;加载应用控制器类
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;$controllers;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;elseif&amp;nbsp;(file_exists($models))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//加载应用模型类
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;$models;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;错误代码&amp;nbsp;*/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;下面重点讲解主请求方法 callHook()，首先我们想看看我们的 URL 会这样：&lt;/p&gt;&lt;pre class=&quot;hljs&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;yoursite.com/controllerName/actionName/queryString&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;callHook()的作用就是，从全局变量 $_GET[&amp;#39;url&amp;#39;]变量中获取 URL，并将其分割成三部分：$controller、$action 和 $queryString。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;例如，URL链接为：&lt;span style=&quot;word-wrap: break-word; text-decoration: underline; color: rgb(0, 0, 255);&quot;&gt;todo.com/item/view/1/first-item&lt;/span&gt;，那么&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;$controller 就是：&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;item&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;$action 就是：&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;strong style=&quot;word-wrap: break-word;&quot;&gt;view&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查询字符串Query String就是：&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;array(1, first-item)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;分割完成后，会实例化一个新的控制器：&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;$controller.&amp;#39;Controller&amp;#39;&lt;/span&gt;（其中“.”是连字符），并调用其方法 $action。&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: normal; white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; line-height: 35px; color: rgb(66, 139, 202); text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.6 控制器/Controller基类&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;接下来的操作就是在&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;fastphp&amp;nbsp;&lt;/span&gt;&lt;/span&gt;中建立程序所需的基类，包括&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;控制器&lt;/span&gt;&lt;/span&gt;、&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;模型&lt;/span&gt;&lt;/span&gt;和&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;视图&lt;/span&gt;&lt;/span&gt;的基类。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;新建控制器基类为&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;Controller.class.php&lt;/span&gt;&lt;/span&gt;，控制器的主要功能就是总调度，具体具体内容如下：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php&amp;nbsp;/**
&amp;nbsp;*&amp;nbsp;控制器基类
&amp;nbsp;*/class&amp;nbsp;Controller{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_controller;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_action;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_view;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;构造函数，初始化属性，并实例化对应模型
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;__construct($controller,&amp;nbsp;$action)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_controller&amp;nbsp;=&amp;nbsp;$controller;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_action&amp;nbsp;=&amp;nbsp;$action;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_view&amp;nbsp;=&amp;nbsp;new&amp;nbsp;View($controller,&amp;nbsp;$action);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;分配变量
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;assign($name,&amp;nbsp;$value)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_view-&amp;gt;assign($name,&amp;nbsp;$value);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;渲染视图
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;__destruct()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_view-&amp;gt;render();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; font-size: 12px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; color: rgb(51, 51, 51); font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;Controller 类实现所有控制器、模型和视图（View类）的通信。在执行析构函数时，我们可以调用 render() 来显示视图（view）文件。&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.7 模型Model基类&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;新建模型基类为&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;Model.class.php&lt;/span&gt;&lt;/span&gt;，模型基类 Model.class.php 代码如下：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?phpclass&amp;nbsp;Model&amp;nbsp;extends&amp;nbsp;Sql{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_model;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_table;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;__construct()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;连接数据库
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;connect(DB_HOST,&amp;nbsp;DB_USER,&amp;nbsp;DB_PASSWORD,&amp;nbsp;DB_NAME);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;获取模型名称
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_model&amp;nbsp;=&amp;nbsp;get_class($this);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_model&amp;nbsp;=&amp;nbsp;rtrim($this-&amp;gt;_model,&amp;nbsp;&amp;#39;Model&amp;#39;);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;数据库表名与类名一致
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_table&amp;nbsp;=&amp;nbsp;strtolower($this-&amp;gt;_model);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;__destruct()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;考虑到模型需要对&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;数据库&lt;/span&gt;进行处理，所以单独建立一个数据库基类&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;Sql.class.php&lt;/span&gt;&lt;/span&gt;，模型基类继承 Sql.class.php，代码如下：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php&amp;nbsp;class&amp;nbsp;Sql{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_dbHandle;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_result;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;连接数据库
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;connect($host,&amp;nbsp;$user,&amp;nbsp;$pass,&amp;nbsp;$dbname)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$dsn&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;mysql:host=%s;dbname=%s;charset=utf8&amp;quot;,&amp;nbsp;$host,&amp;nbsp;$dbname);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_dbHandle&amp;nbsp;=&amp;nbsp;new&amp;nbsp;PDO($dsn,&amp;nbsp;$user,&amp;nbsp;$pass,&amp;nbsp;array(PDO::ATTR_DEFAULT_FETCH_MODE&amp;nbsp;=&amp;gt;&amp;nbsp;PDO::FETCH_ASSOC));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(PDOException&amp;nbsp;$e)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(&amp;#39;错误:&amp;nbsp;&amp;#39;&amp;nbsp;.&amp;nbsp;$e-&amp;gt;getMessage());
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;查询所有
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;selectAll()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sql&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;`%s`&amp;quot;,&amp;nbsp;$this-&amp;gt;_table);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth&amp;nbsp;=&amp;nbsp;$this-&amp;gt;_dbHandle-&amp;gt;prepare($sql);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth-&amp;gt;execute();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$sth-&amp;gt;fetchAll();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;根据条件&amp;nbsp;(id)&amp;nbsp;查询
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;select($id)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sql&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;`%s`&amp;nbsp;where&amp;nbsp;`id`&amp;nbsp;=&amp;nbsp;&amp;#39;%s&amp;#39;&amp;quot;,&amp;nbsp;$this-&amp;gt;_table,&amp;nbsp;$id);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth&amp;nbsp;=&amp;nbsp;$this-&amp;gt;_dbHandle-&amp;gt;prepare($sql);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth-&amp;gt;execute();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$sth-&amp;gt;fetch();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;根据条件&amp;nbsp;(id)&amp;nbsp;删除
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;delete($id)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sql&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;delete&amp;nbsp;from&amp;nbsp;`%s`&amp;nbsp;where&amp;nbsp;`id`&amp;nbsp;=&amp;nbsp;&amp;#39;%s&amp;#39;&amp;quot;,&amp;nbsp;$this-&amp;gt;_table,&amp;nbsp;$id);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth&amp;nbsp;=&amp;nbsp;$this-&amp;gt;_dbHandle-&amp;gt;prepare($sql);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth-&amp;gt;execute();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$sth-&amp;gt;rowCount();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;自定义SQL查询，返回影响的行数
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;query($sql)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth&amp;nbsp;=&amp;nbsp;$this-&amp;gt;_dbHandle-&amp;gt;prepare($sql);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sth-&amp;gt;execute();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$sth-&amp;gt;rowCount();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;新增数据
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;add($data)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sql&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;insert&amp;nbsp;into&amp;nbsp;`%s`&amp;nbsp;%s&amp;quot;,&amp;nbsp;$this-&amp;gt;_table,&amp;nbsp;$this-&amp;gt;formatInsert($data));&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$this-&amp;gt;query($sql);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;修改数据
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;update($id,&amp;nbsp;$data)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$sql&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;update&amp;nbsp;`%s`&amp;nbsp;set&amp;nbsp;%s&amp;nbsp;where&amp;nbsp;`id`&amp;nbsp;=&amp;nbsp;&amp;#39;%s&amp;#39;&amp;quot;,&amp;nbsp;$this-&amp;gt;_table,&amp;nbsp;$this-&amp;gt;formatUpdate($data),&amp;nbsp;$id);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$this-&amp;gt;query($sql);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;将数组转换成插入格式的sql语句
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;function&amp;nbsp;formatInsert($data)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$fields&amp;nbsp;=&amp;nbsp;array();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$values&amp;nbsp;=&amp;nbsp;array();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;($data&amp;nbsp;as&amp;nbsp;$key&amp;nbsp;=&amp;gt;&amp;nbsp;$value)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$fields[]&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;`%s`&amp;quot;,&amp;nbsp;$key);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$values[]&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;&amp;#39;%s&amp;#39;&amp;quot;,&amp;nbsp;$value);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$field&amp;nbsp;=&amp;nbsp;implode(&amp;#39;,&amp;#39;,&amp;nbsp;$fields);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$value&amp;nbsp;=&amp;nbsp;implode(&amp;#39;,&amp;#39;,&amp;nbsp;$values);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;sprintf(&amp;quot;(%s)&amp;nbsp;values&amp;nbsp;(%s)&amp;quot;,&amp;nbsp;$field,&amp;nbsp;$value);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;将数组转换成更新格式的sql语句
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;function&amp;nbsp;formatUpdate($data)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$fields&amp;nbsp;=&amp;nbsp;array();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach&amp;nbsp;($data&amp;nbsp;as&amp;nbsp;$key&amp;nbsp;=&amp;gt;&amp;nbsp;$value)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$fields[]&amp;nbsp;=&amp;nbsp;sprintf(&amp;quot;`%s`&amp;nbsp;=&amp;nbsp;&amp;#39;%s&amp;#39;&amp;quot;,&amp;nbsp;$key,&amp;nbsp;$value);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;implode(&amp;#39;,&amp;#39;,&amp;nbsp;$fields);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;应该说，&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;Sql.class.php 是框架的核心部分&lt;/span&gt;&lt;/span&gt;。为什么？因为通过它，我们创建了一个 SQL 抽象层，可以大大减少了数据库的编程工作。虽然 PDO 接口本来已经很简洁，但是抽象之后框架的可灵活性更高。&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;3.8 视图View类&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;视图类&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;View.class.php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;内容如下：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php/**
&amp;nbsp;*&amp;nbsp;视图基类
&amp;nbsp;*/class&amp;nbsp;View{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$variables&amp;nbsp;=&amp;nbsp;array();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_controller;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;$_action;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;__construct($controller,&amp;nbsp;$action)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_controller&amp;nbsp;=&amp;nbsp;$controller;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;_action&amp;nbsp;=&amp;nbsp;$action;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;分配变量&amp;nbsp;**/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;assign($name,&amp;nbsp;$value)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;variables[$name]&amp;nbsp;=&amp;nbsp;$value;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;渲染显示&amp;nbsp;**/
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;render()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;extract($this-&amp;gt;variables);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$defaultHeader&amp;nbsp;=&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/views/header.php&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$defaultFooter&amp;nbsp;=&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/views/footer.php&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$controllerHeader&amp;nbsp;=&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/views/&amp;#39;&amp;nbsp;.&amp;nbsp;$this-&amp;gt;_controller&amp;nbsp;.&amp;nbsp;&amp;#39;/header.php&amp;#39;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$controllerFooter&amp;nbsp;=&amp;nbsp;APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/views/&amp;#39;&amp;nbsp;.&amp;nbsp;$this-&amp;gt;_controller&amp;nbsp;.&amp;nbsp;&amp;#39;/footer.php&amp;#39;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;页头文件
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(file_exists($controllerHeader))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;($controllerHeader);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;($defaultHeader);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;页内容文件
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;(APP_PATH&amp;nbsp;.&amp;nbsp;&amp;#39;application/views/&amp;#39;&amp;nbsp;.&amp;nbsp;$this-&amp;gt;_controller&amp;nbsp;.&amp;nbsp;&amp;#39;/&amp;#39;&amp;nbsp;.&amp;nbsp;$this-&amp;gt;_action&amp;nbsp;.&amp;nbsp;&amp;#39;.php&amp;#39;);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;页脚文件
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(file_exists($controllerFooter))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;($controllerFooter);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include&amp;nbsp;($defaultFooter);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;这样我们的核心的PHP MVC框架就编写完成了，下面我们开始编写应用来测试框架功能。&lt;/p&gt;&lt;h2 style=&quot;word-wrap: break-word; margin: 35px -20px 12px -24px; padding: 10px 20px 9px; font-size: 22px; font-weight: normal; white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; line-height: 18px; color: rgb(66, 139, 202); text-rendering: optimizeLegibility; border-left: 4px solid rgb(66, 139, 202);&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;4 应用&lt;/span&gt;&lt;/h2&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;4.1 数据库部署&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在 SQL 中新建一个 todo 数据库，使用下面的语句增加 item 数据表并插入2条记录：&lt;/p&gt;&lt;pre class=&quot;hljs sql&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;CREATE&amp;nbsp;DATABASE&amp;nbsp;`todo`&amp;nbsp;DEFAULT&amp;nbsp;CHARACTER&amp;nbsp;SET&amp;nbsp;utf8&amp;nbsp;COLLATE&amp;nbsp;utf8_general_ci;USE&amp;nbsp;`todo`;CREATE&amp;nbsp;TABLE&amp;nbsp;`item`&amp;nbsp;(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`id`&amp;nbsp;int(11)&amp;nbsp;NOT&amp;nbsp;NULL&amp;nbsp;auto_increment,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`item_name`&amp;nbsp;varchar(255)&amp;nbsp;NOT&amp;nbsp;NULL,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRIMARY&amp;nbsp;KEY&amp;nbsp;(`id`)
)&amp;nbsp;ENGINE=InnoDB&amp;nbsp;AUTO_INCREMENT=1&amp;nbsp;DEFAULT&amp;nbsp;CHARSET=utf8;&amp;nbsp;
INSERT&amp;nbsp;INTO&amp;nbsp;`item`&amp;nbsp;VALUES(1,&amp;nbsp;&amp;#39;Hello&amp;nbsp;World.&amp;#39;);INSERT&amp;nbsp;INTO&amp;nbsp;`item`&amp;nbsp;VALUES(2,&amp;nbsp;&amp;#39;Lets&amp;nbsp;go!&amp;#39;);&lt;/pre&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;4.2 部署模型&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;然后，我们还需要在&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;models&lt;/span&gt;&lt;/span&gt;&amp;nbsp;目录中创建一个&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;ItemModel.php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;模型，内容如下：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?phpclass&amp;nbsp;ItemModel&amp;nbsp;extends&amp;nbsp;Model{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;业务逻辑层实现&amp;nbsp;*/}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;模型内容为空。因为 Item 模型继承了 Model，所以它拥有 Model 的所有功能。&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;4.3 部署控制器&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;controllers&lt;/span&gt;&amp;nbsp;&lt;/span&gt;目录下创建一个&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;ItemController.php&lt;/span&gt;&lt;/span&gt;&amp;nbsp;控制器，内容如下：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;?php
&amp;nbsp;class&amp;nbsp;ItemController&amp;nbsp;extends&amp;nbsp;Controller{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;首页方法，测试框架自定义DB查询
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;index()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$items&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;ItemModel)-&amp;gt;selectAll();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;title&amp;#39;,&amp;nbsp;&amp;#39;全部条目&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;items&amp;#39;,&amp;nbsp;$items);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;添加记录，测试框架DB记录创建（Create）
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;add()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$data[&amp;#39;item_name&amp;#39;]&amp;nbsp;=&amp;nbsp;$_POST[&amp;#39;value&amp;#39;];
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$count&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;ItemModel)-&amp;gt;add($data);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;title&amp;#39;,&amp;nbsp;&amp;#39;添加成功&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;count&amp;#39;,&amp;nbsp;$count);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;查看记录，测试框架DB记录读取（Read）
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;view($id&amp;nbsp;=&amp;nbsp;null)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$item&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;ItemModel)-&amp;gt;select($id);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;title&amp;#39;,&amp;nbsp;&amp;#39;正在查看&amp;#39;&amp;nbsp;.&amp;nbsp;$item[&amp;#39;item_name&amp;#39;]);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;item&amp;#39;,&amp;nbsp;$item);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;更新记录，测试框架DB记录更新（Update）
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;update()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$data&amp;nbsp;=&amp;nbsp;array(&amp;#39;id&amp;#39;&amp;nbsp;=&amp;gt;&amp;nbsp;$_POST[&amp;#39;id&amp;#39;],&amp;nbsp;&amp;#39;item_name&amp;#39;&amp;nbsp;=&amp;gt;&amp;nbsp;$_POST[&amp;#39;value&amp;#39;]);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$count&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;ItemModel)-&amp;gt;update($data[&amp;#39;id&amp;#39;],&amp;nbsp;$data);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;title&amp;#39;,&amp;nbsp;&amp;#39;修改成功&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;count&amp;#39;,&amp;nbsp;$count);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;删除记录，测试框架DB记录删除（Delete）
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;function&amp;nbsp;delete($id&amp;nbsp;=&amp;nbsp;null)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$count&amp;nbsp;=&amp;nbsp;(new&amp;nbsp;ItemModel)-&amp;gt;delete($id);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;title&amp;#39;,&amp;nbsp;&amp;#39;删除成功&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;assign(&amp;#39;count&amp;#39;,&amp;nbsp;$count);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;4.4 部署视图&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;views&lt;/span&gt;&amp;nbsp;&lt;/span&gt;目录下新建 header.php 和 footer.php 两个页头页脚模板，内容如下。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;header.php&lt;/span&gt;&lt;/span&gt;，内容：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;http-equiv=&amp;quot;Content-Type&amp;quot;&amp;nbsp;content=&amp;quot;text/html;&amp;nbsp;charset=utf-8&amp;quot;&amp;nbsp;/&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$title&amp;nbsp;?&amp;gt;&amp;lt;/title&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;style&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.item&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;width:400px;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;input&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:#222222;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-family:georgia,times;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-size:24px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-weight:normal;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;line-height:1.2em;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:black;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:blue;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-family:georgia,times;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-size:20px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-weight:normal;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;line-height:1.2em;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;text-decoration:none;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a:hover&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;text-decoration:underline;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;h1&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:#000000;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-size:41px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;letter-spacing:-2px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;line-height:1em;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-family:helvetica,arial,sans-serif;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border-bottom:1px&amp;nbsp;dotted&amp;nbsp;#cccccc;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;h2&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:#000000;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-size:34px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;letter-spacing:-2px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;line-height:1em;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;font-family:helvetica,arial,sans-serif;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;h1&amp;gt;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$title&amp;nbsp;?&amp;gt;&amp;lt;/h1&amp;gt;&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;footer.php&lt;/span&gt;&lt;/span&gt;，内容：&lt;/p&gt;&lt;pre class=&quot;hljs apache&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;然后，在&amp;nbsp;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;views/item&lt;/span&gt;&amp;nbsp;创建以下几个视图文件。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;index.php&lt;/span&gt;&lt;/span&gt;，浏览数据库内 item 表的所有记录，内容：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;form&amp;nbsp;action=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/add&amp;quot;&amp;nbsp;method=&amp;quot;post&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;input&amp;nbsp;type=&amp;quot;text&amp;quot;&amp;nbsp;value=&amp;quot;点击添加&amp;quot;&amp;nbsp;onclick=&amp;quot;this.value=&amp;#39;&amp;#39;&amp;quot;&amp;nbsp;name=&amp;quot;value&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;input&amp;nbsp;type=&amp;quot;submit&amp;quot;&amp;nbsp;value=&amp;quot;添加&amp;quot;&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;?php&amp;nbsp;$number&amp;nbsp;=&amp;nbsp;0?&amp;gt;
&amp;nbsp;&amp;lt;?php&amp;nbsp;foreach&amp;nbsp;($items&amp;nbsp;as&amp;nbsp;$item):&amp;nbsp;?&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;a&amp;nbsp;class=&amp;quot;big&amp;quot;&amp;nbsp;href=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/view/&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$item[&amp;#39;id&amp;#39;]&amp;nbsp;?&amp;gt;&amp;quot;&amp;nbsp;title=&amp;quot;点击修改&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;span&amp;nbsp;class=&amp;quot;item&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;++$number&amp;nbsp;?&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$item[&amp;#39;item_name&amp;#39;]&amp;nbsp;?&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/span&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/a&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;----&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;a&amp;nbsp;class=&amp;quot;big&amp;quot;&amp;nbsp;href=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/delete/&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$item[&amp;#39;id&amp;#39;]?&amp;gt;&amp;quot;&amp;gt;删除&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;?php&amp;nbsp;endforeach&amp;nbsp;?&amp;gt;&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;add.php&lt;/span&gt;&lt;/span&gt;，添加记录，内容：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;a&amp;nbsp;class=&amp;quot;big&amp;quot;&amp;nbsp;href=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/index&amp;quot;&amp;gt;成功添加&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$count&amp;nbsp;?&amp;gt;条记录，点击返回&amp;lt;/a&amp;gt;&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;view.php&lt;/span&gt;&lt;/span&gt;，查看单条记录，内容：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;form&amp;nbsp;action=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/update&amp;quot;&amp;nbsp;method=&amp;quot;post&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;input&amp;nbsp;type=&amp;quot;text&amp;quot;&amp;nbsp;name=&amp;quot;value&amp;quot;&amp;nbsp;value=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$item[&amp;#39;item_name&amp;#39;]&amp;nbsp;?&amp;gt;&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;input&amp;nbsp;type=&amp;quot;hidden&amp;quot;&amp;nbsp;name=&amp;quot;id&amp;quot;&amp;nbsp;value=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$item[&amp;#39;id&amp;#39;]&amp;nbsp;?&amp;gt;&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;input&amp;nbsp;type=&amp;quot;submit&amp;quot;&amp;nbsp;value=&amp;quot;修改&amp;quot;&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;a&amp;nbsp;class=&amp;quot;big&amp;quot;&amp;nbsp;href=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/index&amp;quot;&amp;gt;返回&amp;lt;/a&amp;gt;&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;update.php&lt;/span&gt;&lt;/span&gt;，更改记录，内容：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;a&amp;nbsp;class=&amp;quot;big&amp;quot;&amp;nbsp;href=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/index&amp;quot;&amp;gt;成功修改&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$count&amp;nbsp;?&amp;gt;项，点击返回&amp;lt;/a&amp;gt;&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(255, 0, 255);&quot;&gt;&lt;span style=&quot;word-wrap: break-word; font-weight: 600;&quot;&gt;delete.php&lt;/span&gt;&lt;/span&gt;，删除记录，内容：&lt;/p&gt;&lt;pre class=&quot;hljs xml&quot; style=&quot;word-wrap: break-word; padding: 1em; margin-top: 0px; margin-bottom: 0px; font-size: 12px; border-radius: 3px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; color: rgb(51, 51, 51); overflow-x: auto; line-height: 1.65; white-space: pre-wrap; word-break: break-all; background-color: rgb(247, 247, 247);&quot;&gt;&amp;lt;a&amp;nbsp;href=&amp;quot;&amp;lt;?php&amp;nbsp;echo&amp;nbsp;APP_URL&amp;nbsp;?&amp;gt;/item/index&amp;quot;&amp;gt;成功删除&amp;lt;?php&amp;nbsp;echo&amp;nbsp;$count&amp;nbsp;?&amp;gt;项，点击返回&amp;lt;/a&amp;gt;&lt;/pre&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 13px 0px 7px; padding: 0px; font-size: 16px; font-weight: 500; line-height: 35px; color: rgb(66, 139, 202); white-space: normal; background-color: rgb(255, 255, 255); font-family: Arial, 黑体, &amp;quot;Segoe UI&amp;quot;; text-rendering: optimizeLegibility; border: none; clear: both;&quot;&gt;&lt;span style=&quot;word-wrap: break-word;&quot;&gt;4.5 应用测试&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;这样，在浏览器中访问 todo 程序：&lt;span style=&quot;word-wrap: break-word; text-decoration: underline;&quot;&gt;&lt;span style=&quot;word-wrap: break-word; color: rgb(0, 0, 255);&quot;&gt;http://localhost/todo/item/index/&lt;/span&gt;&lt;/span&gt;，就可以看到效果了。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;&lt;a href=&quot;http://www.awaimai.com/wp-content/uploads/2015/09/result.jpg&quot; title=&quot;&quot; style=&quot;word-wrap: break-word; color: rgb(66, 139, 202); text-decoration: none; outline: none medium; transition-property: color; transition-duration: 0.3s; transition-timing-function: ease;&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-188&quot; src=&quot;/ueditor/php/upload/image/20160930/1475205199427825.jpg&quot; alt=&quot;result&quot; width=&quot;300&quot; height=&quot;205&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;以上代码已经全部发布到 github 上，关键部分加航了注释，仓库地址：&lt;a href=&quot;https://github.com/yeszao/fastphp&quot; target=&quot;_blank&quot; title=&quot;&quot; style=&quot;word-wrap: break-word; color: rgb(66, 139, 202); text-decoration: none; outline: none medium; transition-property: color; transition-duration: 0.3s; transition-timing-function: ease;&quot;&gt;https://github.com/yeszao/fastphp&lt;/a&gt;，欢迎克隆、提交。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 13px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); line-height: 1.6em; font-family: &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;要设计更好的MVC，或使用得更加规范，请看《&lt;a href=&quot;http://www.awaimai.com/873.html&quot; target=&quot;_blank&quot; title=&quot;&quot; style=&quot;word-wrap: break-word; color: rgb(66, 139, 202); text-decoration: none; outline: none medium; transition-property: color; transition-duration: 0.3s; transition-timing-function: ease;&quot;&gt;MVC架构的职责划分原则&lt;/a&gt;》。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;