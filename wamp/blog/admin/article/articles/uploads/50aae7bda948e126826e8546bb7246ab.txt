&lt;p class=&quot;text&quot; style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; padding: 0px; width: 1020px; font-weight: bold; color: rgb(0, 0, 0); font-size: 24px; line-height: 36px;&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class=&quot;f_text&quot; style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; padding: 0px; width: 1020px; color: rgb(153, 153, 153); font-size: 14px; line-height: 30px;&quot;&gt;&lt;strong style=&quot;color: rgb(51, 51, 51); font-size: 1em; word-wrap: break-word;&quot;&gt;摘要：&lt;/strong&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-size: 16px;&quot;&gt;微信应用开放的服务和组件包含如下：视图容器：视图(View)、滚动视图、Swiper基础内容：图标、文本、进度条表单组件：按钮、表单等等操作反馈导航媒体组建：音频、图片、视频。地图画布文件操作能力网络：上传下载能 ...&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 0px 0px 10px; padding: 0px; font-size: 24px; font-weight: 500; line-height: 1.1; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;微信应用开放的服务和组件包含如下：&lt;/h3&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;视图容器：视图(View)、滚动视图、Swiper&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;基础内容：图标、文本、进度条&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;表单组件：按钮、表单等等&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;操作反馈&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;导航&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;媒体组建：音频、图片、视频。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;地图&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;画布&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文件操作能力&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;网络：上传下载能力、WebSocket&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据：数据缓存能力&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;位置：获取位置、查看位置&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;设备：网络状态、系统信息、重力感应、罗盘&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;界面：设置导航条、导航、动画、绘图等等&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开放接口：登录，包括签名加密，用户信息、微信支付、模板消息&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 20px 0px 10px; padding: 0px; font-size: 24px; font-weight: 500; line-height: 1.1; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;审核：&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;根据《微信小程序平台服务协议》，里面有关描述如下：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;2.4 为确保微信小程序平台、微信公众平台、其他用户等各方的安全、稳定及良好的用户体验，腾讯将对需要发布的小程序进行发布审核。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;“发布审核”是指由用户发起，将其完成初始化开发的小程序提交至腾讯，由腾讯自行或委托第三方对该小程序的合法性、合理性、安全性、稳定性、可操作性、用户体验等各方面，采用包括但不限于开发信息核对、安全测试、UI测试、随机测试、动态测试、安全测试等方式，进行审查、甄别、试验与评估的过程。发布审核结果包括审核通过与审核不通过两种。审核不通过的，该小程序将无法发布。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;之后小程序的审核极有可能采取和App store类似的策略，但相比微信其他平台的审核，各位严格和复杂。&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 20px 0px 10px; padding: 0px; font-size: 24px; font-weight: 500; line-height: 1.1; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;教程：&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;微信应用号（小程序，「应用号」的新称呼）终于来了！目前还处于内测阶段，微信只邀请了部分企业参与封测。想必大家都关心应用号的最终形态到底是什么样子？怎样将一个「服务号」改造成为「小程序」？我们暂时以一款简单的第三方工具的实例，来演示一下开发过程吧。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;OK，为了让大家尽快看到这份教程，博卡君注定要熬夜了！今晚开始更新，希望明天一早就能发布第一篇教程！记录开始！看看几天能完成变身吧！&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;序言&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;开始开发应用号之前，先看看官方公布的「小程序」教程吧！（以下内容来自微信官方公布的「小程序」开发指南）&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;本文档将带你一步步创建完成一个微信小程序，并可以在手机上体验该小程序的实际效果。这个小程序的首页将会显示欢迎语以及当前用户的微信头像，点击头像，可以在新开的页面中查看当前小程序的启动日志。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;1. 获取微信小程序的 AppID&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;首先，我们需要拥有一个帐号，如果你能看到该文档，我们应当已经邀请并为你创建好一个帐号。注意不可直接使用服务号或订阅号的 AppID。 利用提供的帐号，登录&amp;nbsp;&lt;a href=&quot;https://mp.weixin.qq.com/&quot; target=&quot;_blank&quot; style=&quot;word-wrap: break-word; color: rgb(51, 122, 183); text-decoration: none; outline: none medium; transition-property: color; transition-duration: 0.3s; transition-timing-function: ease; box-sizing: border-box; background-color: transparent;&quot;&gt;https://mp.weixin.qq.com&lt;/a&gt;&amp;nbsp;，就可以在网站的「设置」-「开发者设置」中，查看到微信小程序的 AppID 了。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144224692&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;注意：如果我们不是用注册时绑定的管理员微信号，在手机上体验该小程序。那么我们还需要操作「绑定开发者」。即在「用户身份-开发者」模块，绑定上需要体验该小程序的微信号。本教程默认注册帐号、体验都是使用管理员微信号。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;2. 创建项目&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;我们需要通过开发者工具，来完成小程序创建和代码编辑。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;开发者工具安装完成后，打开并使用微信扫码登录。选择创建「项目」，填入上文获取到的 AppID，设置一个本地项目的名称（非小程序名称），比如「我的第一个项目」，并选择一个本地的文件夹作为代码存储的目录，点击「新建项目」就可以了。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;为方便初学者了解微信小程序的基本代码结构，在创建过程中，如果选择的本地文件夹是个空文件夹，开发者工具会提示，是否需要创建一个 quick start 项目。选择「是」，开发者工具会帮助我们在开发目录里生成一个简单的 demo。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144254099&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;项目创建成功后，我们就可以点击该项目，进入并看到完整的开发者工具界面，点击左侧导航，在「编辑」里可以查看和编辑我们的代码，在「调试」里可以测试代码并模拟小程序在微信客户端效果，在「项目」里可以发送到手机里预览实际效果。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;3. 编写代码&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;点击开发者工具左侧导航的「编辑」，我们可以看到这个项目，已经初始化并包含了一些简单的代码文件。最关键也是必不可少的，是 app.js、app.json、app.wxss 这三个。其中，.js 后缀的是脚本文件，.json 后缀的文件是配置文件，.wxss 后缀的是样式表文件。微信小程序会读取这些文件，并生成小程序实例。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;下面我们简单了解这三个文件的功能，方便修改以及从头开发自己的微信小程序。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;app.js 是小程序的脚本代码。我们可以在这个文件中监听并处理小程序的生命周期函数、声明全局变量。调用 MINA 提供的丰富的 API，如本例的同步存储及同步读取本地数据。&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;//app.jsApp({
&amp;nbsp;&amp;nbsp;onLaunch:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//调用API从本地缓存中获取数据
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;logs&amp;nbsp;=&amp;nbsp;wx.getStorageSync(&amp;#39;logs&amp;#39;)&amp;nbsp;||&amp;nbsp;[]
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logs.unshift(Date.now())
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wx.setStorageSync(&amp;#39;logs&amp;#39;,&amp;nbsp;logs)
&amp;nbsp;&amp;nbsp;},
&amp;nbsp;&amp;nbsp;getUserInfo:function(cb){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;that&amp;nbsp;=&amp;nbsp;this;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(this.globalData.userInfo){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;typeof&amp;nbsp;cb&amp;nbsp;==&amp;nbsp;&amp;quot;function&amp;quot;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;cb(this.globalData.userInfo)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}else{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//调用登录接口
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wx.login({
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;success:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wx.getUserInfo({
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;success:&amp;nbsp;function&amp;nbsp;(res)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.globalData.userInfo&amp;nbsp;=&amp;nbsp;res.userInfo;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;typeof&amp;nbsp;cb&amp;nbsp;==&amp;nbsp;&amp;quot;function&amp;quot;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;cb(that.globalData.userInfo)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;},
&amp;nbsp;&amp;nbsp;globalData:{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;userInfo:null
&amp;nbsp;&amp;nbsp;}
})&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;app.json 是对整个小程序的全局配置。我们可以在这个文件中配置小程序是由哪些页面组成，配置小程序的窗口 背景色，配置导航条样式，配置默认标题。注意该文件不可添加任何注释。&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;{
&amp;nbsp;&amp;nbsp;&amp;quot;pages&amp;quot;:[&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;pages/index/index&amp;quot;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;pages/logs/logs&amp;quot;
&amp;nbsp;&amp;nbsp;],
&amp;nbsp;&amp;nbsp;&amp;quot;window&amp;quot;:{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;backgroundTextStyle&amp;quot;:&amp;quot;light&amp;quot;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;navigationBarBackgroundColor&amp;quot;:&amp;nbsp;&amp;quot;#fff&amp;quot;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;navigationBarTitleText&amp;quot;:&amp;nbsp;&amp;quot;WeChat&amp;quot;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;navigationBarTextStyle&amp;quot;:&amp;quot;black&amp;quot;
&amp;nbsp;&amp;nbsp;}}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;app.wxss 是整个小程序的公共样式表。我们可以在页面组件的class属性上直接使用app.wxss中声明的样式规则。&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;/**app.wxss**/.container&amp;nbsp;{&amp;nbsp;&amp;nbsp;height:&amp;nbsp;100%;&amp;nbsp;&amp;nbsp;display:&amp;nbsp;flex;&amp;nbsp;&amp;nbsp;flex-direction:&amp;nbsp;column;&amp;nbsp;&amp;nbsp;align-items:&amp;nbsp;center;&amp;nbsp;&amp;nbsp;justify-content:&amp;nbsp;space-between;&amp;nbsp;&amp;nbsp;padding:&amp;nbsp;200rpx&amp;nbsp;0;&amp;nbsp;&amp;nbsp;box-sizing:&amp;nbsp;border-box;}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;4.创建页面&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;在这个教程里，我们有两个页面，index 页面和 logs 页面，即欢迎页和小程序启动日志的展示页，他们都在 pages 目录下。微信小程序中的每一个页面的【路径+页面名】都需要写在 app.json 的 pages 中，且 pages 中的第一个页面是小程序的首页。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;每一个小程序页面是由同路径下同名的四个不同后缀文件的组成，如：index.js、index.wxml、index.wxss、index.json。.js 后缀的文件是脚本文件，.json 后缀的文件是配置文件，.wxss 后缀的是样式表文件，.wxml 后缀的文件是页面结构文件。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;index.wxml是页面的结构文件：&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{{userInfo.nickName}}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{{motto}}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;本例中使用了 、、来搭建页面结构，绑定数据和交互处理函数。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;index.js 是页面的脚本文件，在这个文件中我们可以监听并处理页面的生命周期函数、获取小程序实例，声明并处理数据，响应页面交互事件等。&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;//index.js//获取应用实例var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;getApp()
Page({
&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;motto:&amp;nbsp;&amp;#39;Hello&amp;nbsp;World&amp;#39;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;userInfo:&amp;nbsp;{}
&amp;nbsp;&amp;nbsp;},&amp;nbsp;&amp;nbsp;//事件处理函数
&amp;nbsp;&amp;nbsp;bindViewTap:&amp;nbsp;function()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wx.navigateTo({
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url:&amp;nbsp;&amp;#39;../logs/logs&amp;#39;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})
&amp;nbsp;&amp;nbsp;},
&amp;nbsp;&amp;nbsp;onLoad:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(&amp;#39;onLoad&amp;#39;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;that&amp;nbsp;=&amp;nbsp;this
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//调用应用实例的方法获取全局数据
&amp;nbsp;&amp;nbsp;&amp;nbsp;app.getUserInfo(function(userInfo){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//更新数据
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.setData({
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;userInfo:userInfo
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})
&amp;nbsp;&amp;nbsp;}
})
index.wxss是页面的样式表：/**index.wxss**/.userinfo&amp;nbsp;{
&amp;nbsp;&amp;nbsp;display:&amp;nbsp;flex;
&amp;nbsp;&amp;nbsp;flex-direction:&amp;nbsp;column;
&amp;nbsp;&amp;nbsp;align-items:&amp;nbsp;center;
}
.userinfo-avatar&amp;nbsp;{
&amp;nbsp;&amp;nbsp;width:&amp;nbsp;128rpx;
&amp;nbsp;&amp;nbsp;height:&amp;nbsp;128rpx;
&amp;nbsp;&amp;nbsp;margin:&amp;nbsp;20rpx;
&amp;nbsp;&amp;nbsp;border-radius:&amp;nbsp;50%;
}
.userinfo-nickname&amp;nbsp;{
&amp;nbsp;&amp;nbsp;color:&amp;nbsp;#aaa;
}
.usermotto&amp;nbsp;{
&amp;nbsp;&amp;nbsp;margin-top:&amp;nbsp;200px;
}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;页面的样式表是非必要的。当有页面样式表时，页面的样式表中的样式规则会层叠覆盖 app.wxss 中的样式规则。如果不指定页面的样式表，也可以在页面的结构文件中直接使用 app.wxss 中指定的样式规则。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;index.json是页面的配置文件：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;页面的配置文件是非必要的。当有页面的配置文件时，配置项在该页面会覆盖 app.json 的 window 中相同的配置项。如果没有指定的页面配置文件，则在该页面直接使用 app.json 中的默认配置。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;logs的页面结构&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{{index&amp;nbsp;+&amp;nbsp;1}}.&amp;nbsp;{{log}}&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;logs 页面使用 控制标签来组织代码，在 上使用 wx:for-items 绑定 logs 数据，并将 logs 数据循环展开节点&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;word-wrap: break-word; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; font-size: 13px; box-sizing: border-box; overflow: auto; font-family: &quot;&gt;//logs.jsvar&amp;nbsp;util&amp;nbsp;=&amp;nbsp;require(&amp;#39;../../utils/util.js&amp;#39;)
Page({
&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logs:&amp;nbsp;[]
&amp;nbsp;&amp;nbsp;},
&amp;nbsp;&amp;nbsp;onLoad:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.setData({
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logs:&amp;nbsp;(wx.getStorageSync(&amp;#39;logs&amp;#39;)&amp;nbsp;||&amp;nbsp;[]).map(function&amp;nbsp;(log)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;util.formatTime(new&amp;nbsp;Date(log))
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})
&amp;nbsp;&amp;nbsp;}
})&lt;/pre&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;运行结果如下：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144352097&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;br/&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;5.手机预览&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;开发者工具左侧菜单栏选择「项目」，点击「预览」，扫码后即可在微信客户端中体验。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144420785&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;目前，预览和上传功能尚无法实现，需要等待微信官方的下一步更新。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;如你所见，微信官方给出的开发指南还非常简单，很多细节、代码和功能都没有明确的展示，所以接下来就到博卡君展示实力的时候啦！开发教程正式开始！&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 20px 0px 10px; padding: 0px; font-size: 24px; font-weight: 500; line-height: 1.1; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;第一章：准备工作&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;做好准备工作很重要。开发一个微信应用号，你需要提前到微信的官方网站（weixin.qq.com）下载开发者工具。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;1. 下载最新微信开发者工具，打开后你会看到该界面：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144502555&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;2. 点击「新建 web+」项目，随后出现如下画面：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144515129&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;3. 该页面内的各项内容需要注意——&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: none;&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;AppID：依照官方解释来填。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Appname: 项目最外层文件夹名称，如你将其命名为「ABC」，则之后的全部项目内容均将保存在「/ABC/…」目录下。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;本地开发目录：项目存放在本地的目录。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;注：再次强调，如果你和团队成员共同开发该项目，则建议你们使用同样的目录名称及本地目录，以确保协同开发的统一性。如果你之前已有项目，则导入过程与以上内容近似，不再赘述。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;4. 准备工作全部完成后，点击「新建项目」按钮，弹出框点「确定」。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144628245&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;5. 如上图所示，此刻，微信开发者工具已经为你自动构建了一个初始的 demo 项目&lt;/span&gt;，该项目内包含了一个微信应用项目所需具备的基本内容和框架结构。点击项目名称（图中即「cards」）进入该项目，就能看到整个项目的基本架构了：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144642395&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;h3 style=&quot;word-wrap: break-word; margin: 20px 0px 10px; padding: 0px; font-size: 24px; font-weight: 500; line-height: 1.1; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;第二章：项目构架&lt;/h3&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;微信目前用户群体非常庞大，微信推出公众号以后，火爆程度大家都看得到，也同样推动着 Html 5 的高速发展，随着公众号业务的需求越来越复杂，应用号现在的到来也是恰到好处。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;博卡君发现，微信提供给开发者的方式也在发生全面的改变：从操作 DOM 转为操作数据，基于微信提供的一个过桥工具实现很多 Html 5 在公众号很难实现的功能，有点类似于 hybrid 开发，不同于 hybrid 开发的方式是：微信开放的接口更为严谨，结构必须采用他提供给的组件，外部的框架和插件都不能在这里使用上，让开发者完全脱离操作 DOM，开发思想转变很大。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;工欲善其事，必先利其器。理解它的核心功能非常重要，先了解它的整个运作流程。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;生命周期：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;在index.js里面：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144739668&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;开发者工具上 Console 可以看到：&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160922144757637&quot; alt=&quot;图片描述&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;在首页 console 可以看出顺序是 App Launch–&amp;gt;App Show–&amp;gt;onLoad–&amp;gt;onShow–&amp;gt;onReady。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;首先是整个 app 的启动与显示，app 的启动在 app.js 里面可以配置，其次再进入到各个页面的加载显示等等。可以想象到这里可以处理很多东西了，如加载框之类的都可以实现等等。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;路由：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;路由在项目开发中一直是个核心点，在这里其实微信对路由的介绍很少，可见微信在路由方面经过很好的封装，也提供三个跳转方法。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;wx.navigateTo(OBJECT)：保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;wx.redirectTo(OBJECT)：关闭当前页面，跳转到应用内的某个页面。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;wx.navigateBack()：关闭当前页面，回退前一页面。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;这三个基本上使用足够，在路由方面微信封装的很好，开发者根本不用去配置路由，往往很多框架在路由方面配置很繁琐。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;组件：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;此次微信在组件提供方面也是非常全面，基本上满足项目需求，故而开发速度非常快，开发前可以认真浏览几次，开发效率会很好。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;&lt;span style=&quot;word-wrap: break-word; box-sizing: border-box; font-weight: 700;&quot;&gt;其它：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;任何外部框架以及插件基本上无法使用，就算原生的 js 插件也很难使用，因为以前的 js 插件也基本上全部是一操作 dom 的形式存在，而微信应用号此次的架构是不允许操作任何 dom，就连以前开发者们习惯使用的动态设置的rem.js也是不支持的。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;此次微信还提供了 WebSocket，就可以直接利用它做聊天，可以开发的空间非常大。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;跟公众号对比博卡君发现，开发应用号组件化，结构化，多样化。新大陆总是充满着惊喜，更多的彩蛋等着大家来发现。&lt;/p&gt;&lt;p style=&quot;word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(51, 51, 51); box-sizing: border-box; font-family: &quot;&gt;更多信息请点击原文链接：&lt;a href=&quot;http://xituqu.com/508.html&quot; target=&quot;_blank&quot; style=&quot;word-wrap: break-word; color: rgb(51, 122, 183); text-decoration: none; outline: none medium; transition-property: color; transition-duration: 0.3s; transition-timing-function: ease; box-sizing: border-box; background-color: transparent;&quot;&gt;http://xituqu.com/508.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;